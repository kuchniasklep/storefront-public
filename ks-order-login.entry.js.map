{"version":3,"names":["OrderLogin","componentDidLoad","this","root","style","display","render","h","class","backgroundColor","maxWidth","margin","fontSize","heading","onSubmit","event","Submit","type","padding","login","href","passwordRecovery","passwordRecoveryString","async","preventDefault","form","querySelector","email","pass","Validate","IsValid","headers","Headers","append","formData","FormData","response","fetch","api","body","method","credentials","then","text","message","passwordMessage","LoginPrompt","data","set","encodeURIComponent","get","toString","action","prompt","document","createElement","setAttribute","promptHeading","promptToCart","promptToConfirmation","search","cartProductsMessage","appendChild"],"sources":["src/components/order/shipping/orderLogin.tsx"],"sourcesContent":["import { Component, h, Element, Prop } from '@stencil/core';\n\n@Component({\n  tag: 'ks-order-login',\n})\nexport class OrderLogin {\n\n    @Element() root: HTMLElement;\n\n    @Prop() api: string = \"\";\n    @Prop() action: string = \"\";\n    @Prop() passwordMessage: string = \"\";\n    @Prop() passwordRecovery: string = \"\";\n\n    @Prop() heading: string = \"\";\n    @Prop() login: string = \"\";\n    @Prop() passwordRecoveryString: string = \"\";\n    @Prop() cartProductsMessage: string = \"\";\n\n    @Prop() promptHeading: string = \"\";\n    @Prop() promptToCart: string = \"\";\n    @Prop() promptToConfirmation: string = \"\";\n\n    componentDidLoad(){\n        this.root.style.display = \"block\";\n    }\n\n    render() {\n        return[\n            <div class=\"uk-padding\" style={{backgroundColor: \"#f2f2f5\"}}>\n                <div class=\"uk-text-center\" style={{maxWidth: \"500px\", margin: \"auto\"}}>\n                    <p class=\"ks-text-decorated uk-text-bold\" style={{fontSize: \"28px\"}}>{this.heading}</p>\n\n                    <form onSubmit={(event)=>this.Submit(event)}>\n                        <slot />\n\n                        <button type=\"submit\" class=\"uk-button uk-button-secondary ks-text-decorated uk-text-bold uk-width-1-1 uk-margin-bottom\"\n                                style={{fontSize: \"20px\", padding: \"6px\"}}>{this.login}\n                        </button>\n                    </form>\n                    <a href={this.passwordRecovery}>{this.passwordRecoveryString}</a>\n                </div>\n            </div>\n        ];\n    }\n\n    async Submit(event: Event) {\n        event.preventDefault();\n\n        const form = this.root.querySelector(\"form\");\n        const email = form.querySelector(\"ks-input-dynamic, ks-input-text[email]\") as HTMLKsInputDynamicElement;\n        const pass = form.querySelector(\"ks-input-text[password]\") as HTMLKsInputTextElement;\n\n        await email.Validate();\n        await pass.Validate();\n\n        if (await email.IsValid() && await pass.IsValid()) {\n            var headers = new Headers();\n            headers.append('pragma', 'no-cache');\n            headers.append('cache-control', 'no-cache');\n\n            const formData = new FormData(form);\n\n            const response = await fetch(this.api, {\n                body: formData,\n                method: 'POST',\n                headers: headers,\n                credentials: \"same-origin\"\n            }).then(response => response.text());\n\n            if(response == \"false\")\n                pass.message = this.passwordMessage;\n\n            else if(response == \"true\") {\n                this.LoginPrompt(formData);\n            }\n        }\n    }\n\n    async LoginPrompt(data: FormData) {\n        \n        var headers = new Headers();\n        headers.append('pragma', 'no-cache');\n        headers.append('cache-control', 'no-cache');\n\n        const formData = new FormData();\n        formData.set(\"data\", `email=${encodeURIComponent(data.get(\"email\").toString())}&haslo=${encodeURIComponent(data.get(\"haslo\").toString())}`)\n\n        const response = await fetch(this.action, {\n            body: formData,\n            method: 'POST',\n            headers: headers,\n            credentials: \"same-origin\"\n        }).then(response => response.text());\n\n        const prompt = document.createElement(\"ks-order-login-prompt\");\n        prompt.setAttribute(\"heading\", this.promptHeading);\n        prompt.setAttribute(\"to-cart\", this.promptToCart);\n        prompt.setAttribute(\"to-confirmation\", this.promptToConfirmation);\n    \n        if(response.search(\"koszyk.html\") != -1) {\n            prompt.setAttribute(\"message\", this.cartProductsMessage);\n        }\n        \n        document.body.appendChild(prompt);\n    }\n}"],"mappings":"4DAKaA,EAAU,M,kCAIG,G,YACG,G,qBACS,G,sBACC,G,aAET,G,WACF,G,4BACiB,G,yBACH,G,mBAEN,G,kBACD,G,0BACQ,E,CAEvCC,mBACIC,KAAKC,KAAKC,MAAMC,QAAU,O,CAG9BC,SACI,MAAM,CACFC,EAAA,OAAKC,MAAM,aAAaJ,MAAO,CAACK,gBAAiB,YAC7CF,EAAA,OAAKC,MAAM,iBAAiBJ,MAAO,CAACM,SAAU,QAASC,OAAQ,SAC3DJ,EAAA,KAAGC,MAAM,iCAAiCJ,MAAO,CAACQ,SAAU,SAAUV,KAAKW,SAE3EN,EAAA,QAAMO,SAAWC,GAAQb,KAAKc,OAAOD,IACjCR,EAAA,aAEAA,EAAA,UAAQU,KAAK,SAAST,MAAM,6FACpBJ,MAAO,CAACQ,SAAU,OAAQM,QAAS,QAAShB,KAAKiB,QAG7DZ,EAAA,KAAGa,KAAMlB,KAAKmB,kBAAmBnB,KAAKoB,0B,CAMtDC,aAAaR,GACTA,EAAMS,iBAEN,MAAMC,EAAOvB,KAAKC,KAAKuB,cAAc,QACrC,MAAMC,EAAQF,EAAKC,cAAc,0CACjC,MAAME,EAAOH,EAAKC,cAAc,iCAE1BC,EAAME,iBACND,EAAKC,WAEX,SAAUF,EAAMG,iBAAmBF,EAAKE,UAAW,CAC/C,IAAIC,EAAU,IAAIC,QAClBD,EAAQE,OAAO,SAAU,YACzBF,EAAQE,OAAO,gBAAiB,YAEhC,MAAMC,EAAW,IAAIC,SAASV,GAE9B,MAAMW,QAAiBC,MAAMnC,KAAKoC,IAAK,CACnCC,KAAML,EACNM,OAAQ,OACRT,QAASA,EACTU,YAAa,gBACdC,MAAKN,GAAYA,EAASO,SAE7B,GAAGP,GAAY,QACXR,EAAKgB,QAAU1C,KAAK2C,qBAEnB,GAAGT,GAAY,OAAQ,CACxBlC,KAAK4C,YAAYZ,E,GAK7BX,kBAAkBwB,GAEd,IAAIhB,EAAU,IAAIC,QAClBD,EAAQE,OAAO,SAAU,YACzBF,EAAQE,OAAO,gBAAiB,YAEhC,MAAMC,EAAW,IAAIC,SACrBD,EAASc,IAAI,OAAQ,SAASC,mBAAmBF,EAAKG,IAAI,SAASC,qBAAqBF,mBAAmBF,EAAKG,IAAI,SAASC,eAE7H,MAAMf,QAAiBC,MAAMnC,KAAKkD,OAAQ,CACtCb,KAAML,EACNM,OAAQ,OACRT,QAASA,EACTU,YAAa,gBACdC,MAAKN,GAAYA,EAASO,SAE7B,MAAMU,EAASC,SAASC,cAAc,yBACtCF,EAAOG,aAAa,UAAWtD,KAAKuD,eACpCJ,EAAOG,aAAa,UAAWtD,KAAKwD,cACpCL,EAAOG,aAAa,kBAAmBtD,KAAKyD,sBAE5C,GAAGvB,EAASwB,OAAO,iBAAmB,EAAG,CACrCP,EAAOG,aAAa,UAAWtD,KAAK2D,oB,CAGxCP,SAASf,KAAKuB,YAAYT,E"}