{"version":3,"names":["orderSuccess","createStore","eventId","heading","message","homepage","orderEndCss","PageOrderEnd","componentWillLoad","orderDataElement","document","getElementById","this","orderData","JSON","parse","innerHTML","Object","keys","map","key","set","track","verify","get","order","displayPayment","paymentOpacity","setTimeout","Fetch","then","response","text","location","reload","catch","render","h","skipbase","commonData","commonDynamicData","class","dark","style","display","opacity","round","link","name"],"sources":["src/global/data/orderEnd.ts","src/components/pages/order/orderEnd.css?tag=ks-page-order-end","src/components/pages/order/orderEnd.tsx"],"sourcesContent":["import { createStore } from \"@stencil/store\";\nimport { OrderData, OrderDetailsData } from \"./order\";\n\nexport const orderSuccess = createStore({\n    eventId: \"\",\n\n    heading: \"\",\n    message: \"\",\n    homepage: \"\",\n\n} as OrderSuccessData);\n\nexport interface OrderSuccessData {\n    eventId: string;\n\n    heading: string;\n    message: string;\n    homepage: string;\n\n    verify: string;\n    error: boolean;\n    errorHeading: string;\n    errorMessage: string;\n\n    orderId: string;\n    orderString: string;\n    orderLink: string;\n    \n    order: OrderData;\n    details: OrderDetailsData;\n}","ks-page-order-end .card {\n    display: block;\n    padding: 0px;\n    box-sizing: border-box;\n\n    max-width: 800px;\n    width: 100%;\n    margin: auto;\n    padding: 50px 20px;\n\n    color: var(--card-text-color);\n    text-align: center;\n}\n\nks-page-order-end .card ks-icon {\n    margin-right: 10px;\n}\n\nks-page-order-end .card h1 {\n    font-size: 22px;\n    font-weight: 700;\n}\n\nks-page-order-end .card .payment {\n    margin-top: 20px;\n    display: flex;\n    justify-content: center;\n    align-items: center;\n    flex-wrap: wrap;\n\n    opacity: 1;\n    transition: opacity ease 0.3s;\n}\n\nks-page-order-end .card .loader {\n    position: relative;\n    height: 40px;\n    margin-top: 20px;\n}\n\nks-page-order-end .card .buttons {\n    margin-top: 10px;\n    display: flex;\n    justify-content: center;\n    align-items: center;\n    flex-wrap: wrap;\n}\n\nks-page-order-end .card .buttons ks-button {\n    margin: 5px;\n}\n\n\nks-page-order-end .card h2 {\n    margin: 20px auto 5px auto;\n    font-weight: 700;\n}","import { Component, h, Prop, State } from '@stencil/core';\nimport { orderSuccess, OrderSuccessData } from \"../../../global/data/orderEnd\";\nimport Fetch from '../../../global/functions/fetch';\n\n@Component({\n    tag: 'ks-page-order-end',\n    styleUrl: 'orderEnd.css'\n})\nexport class PageOrderEnd {\n    @Prop() skipbase: boolean;\n    @Prop() commonData: string;\n    @Prop() commonDynamicData: string;\n\n    @Prop() orderData: string;\n    @State() displayPayment: boolean = true;\n    @State() paymentOpacity: boolean = true;\n\n    componentWillLoad() {\n        const orderDataElement = document.getElementById(this.orderData);\n\t\tconst orderData = JSON.parse(orderDataElement.innerHTML) as OrderSuccessData;\n\n        Object.keys(orderData).map(key => {\n\t\t\torderSuccess.set(key as keyof OrderSuccessData, orderData[key]);\n\t\t});\n\n        this.track();\n\n\n        const verify = orderSuccess.get('verify');\n        const order = orderSuccess.get('orderId');\n\n        if(verify) {\n            this.displayPayment = false;\n            this.paymentOpacity = false;\n\n            this.verify(verify, order);\n\n            setTimeout(()=>{\n                this.displayPayment = true;\n            }, 3000);\n\n            setTimeout(()=>{\n                this.paymentOpacity = true;\n            }, 3100);\n        }\n    }\n\n    verify(verify, order) {\n        setTimeout(()=>{\n            Fetch(verify + `&order=${order}`)\n                .then(response => {\n                    response.text()\n                        .then(text=>{\n                            if(text == \"OK\")\n                                document.location.reload();\n                            else this.verify(verify, order);\n                        })\n                        .catch(()=> this.verify(verify, order))\n                })\n                .catch(()=> this.verify(verify, order))\n        }, 2000);\n    }\n\n    track() {\n        /*if(!orderSuccess.get('error'))\n            window.dataLayer?.push({\n                currency: 'PLN',\n                transaction_id: orderSuccess.get('orderID'),\n                value: orderSuccess.get('orderValue'),\n                items: Object.entries(orderSuccess.get('products')).map( ([id, product]) => { return {\n                    item_id: id,\n                    item_name: product.name,\n                    currency: 'PLN',\n                    price: product.price,\n                    quantity: product.amount\n                }}),\n            });\n        */\n    }\n\n\trender() {\n\t\treturn <ks-page-base skipbase={this.skipbase} commonData={this.commonData} commonDynamicData={this.commonDynamicData}>\n            <div class=\"card\">\n                <h1 class=\"heading\">{orderSuccess.get('heading')}</h1>\n\n                <section class=\"content\">\n                    <div class=\"message\">{orderSuccess.get('message')}</div>\n\n                    {orderSuccess.get('error') ? [\n                        <h2>{orderSuccess.get('errorHeading')}</h2>,\n                        <div>{orderSuccess.get('errorMessage')}</div>\n                    ] : null}\n\n                    {orderSuccess.get('verify') ?\n                        <div class=\"loader\">\n                            <ks-loader dark />\n                        </div> \n                    : null}\n\n                    <div class=\"payment\" style={{display: this.displayPayment ? null : \"none\", opacity: this.paymentOpacity ? null : \"0\"}}>\n                        <slot/>\n                    </div>\n\n                    <div class=\"buttons\">\n                        {orderSuccess.get('orderString') ? \n                            <ks-button round link={orderSuccess.get('orderLink')} name={orderSuccess.get('orderString')} />\n                        : null}\n                        \n                        <ks-button round link=\"/\" name={orderSuccess.get('homepage')} />\n                    </div>\n                </section>\n            </div>\n        </ks-page-base>;\n\t}\n}\n"],"mappings":"+HAGO,MAAMA,EAAeC,EAAY,CACpCC,QAAS,GAETC,QAAS,GACTC,QAAS,GACTC,SAAU,KCRd,MAAMC,EAAc,o+B,MCQPC,EAAY,M,yJAMc,K,oBACA,I,CAEnCC,oBACI,MAAMC,EAAmBC,SAASC,eAAeC,KAAKC,WAC5D,MAAMA,EAAYC,KAAKC,MAAMN,EAAiBO,WAExCC,OAAOC,KAAKL,GAAWM,KAAIC,IAChCpB,EAAaqB,IAAID,EAA+BP,EAAUO,GAAK,IAG1DR,KAAKU,QAGL,MAAMC,EAASvB,EAAawB,IAAI,UAChC,MAAMC,EAAQzB,EAAawB,IAAI,WAE/B,GAAGD,EAAQ,CACPX,KAAKc,eAAiB,MACtBd,KAAKe,eAAiB,MAEtBf,KAAKW,OAAOA,EAAQE,GAEpBG,YAAW,KACPhB,KAAKc,eAAiB,IAAI,GAC3B,KAEHE,YAAW,KACPhB,KAAKe,eAAiB,IAAI,GAC3B,K,EAIXJ,OAAOA,EAAQE,GACXG,YAAW,KACPC,EAAMN,EAAS,UAAUE,KACpBK,MAAKC,IACFA,EAASC,OACJF,MAAKE,IACF,GAAGA,GAAQ,KACPtB,SAASuB,SAASC,cACjBtB,KAAKW,OAAOA,EAAQE,EAAM,IAElCU,OAAM,IAAKvB,KAAKW,OAAOA,EAAQE,IAAO,IAE9CU,OAAM,IAAKvB,KAAKW,OAAOA,EAAQE,IAAO,GAC5C,I,CAGPH,Q,CAiBHc,SACC,OAAOC,EAAA,gBAAcC,SAAU1B,KAAK0B,SAAUC,WAAY3B,KAAK2B,WAAYC,kBAAmB5B,KAAK4B,mBACzFH,EAAA,OAAKI,MAAM,QACPJ,EAAA,MAAII,MAAM,WAAWzC,EAAawB,IAAI,YAEtCa,EAAA,WAASI,MAAM,WACXJ,EAAA,OAAKI,MAAM,WAAWzC,EAAawB,IAAI,YAEtCxB,EAAawB,IAAI,SAAW,CACzBa,EAAA,UAAKrC,EAAawB,IAAI,iBACtBa,EAAA,WAAMrC,EAAawB,IAAI,kBACvB,KAEHxB,EAAawB,IAAI,UACda,EAAA,OAAKI,MAAM,UACPJ,EAAA,aAAWK,KAAI,QAErB,KAEFL,EAAA,OAAKI,MAAM,UAAUE,MAAO,CAACC,QAAShC,KAAKc,eAAiB,KAAO,OAAQmB,QAASjC,KAAKe,eAAiB,KAAO,MAC7GU,EAAA,cAGJA,EAAA,OAAKI,MAAM,WACNzC,EAAawB,IAAI,eACda,EAAA,aAAWS,MAAK,KAACC,KAAM/C,EAAawB,IAAI,aAAcwB,KAAMhD,EAAawB,IAAI,iBAC/E,KAEFa,EAAA,aAAWS,MAAK,KAACC,KAAK,IAAIC,KAAMhD,EAAawB,IAAI,iB"}