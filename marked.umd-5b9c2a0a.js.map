{"version":3,"names":["global","factory","exports","this","_defineProperties","target","props","i","length","descriptor","enumerable","configurable","writable","Object","defineProperty","key","_createClass","Constructor","protoProps","staticProps","prototype","_unsupportedIterableToArray","o","minLen","_arrayLikeToArray","n","toString","call","slice","constructor","name","Array","from","test","arr","len","arr2","_createForOfIteratorHelperLoose","allowArrayLike","it","Symbol","iterator","next","bind","isArray","done","value","TypeError","getDefaults","async","baseUrl","breaks","extensions","gfm","headerIds","headerPrefix","highlight","langPrefix","mangle","pedantic","renderer","sanitize","sanitizer","silent","smartLists","smartypants","tokenizer","walkTokens","xhtml","defaults","changeDefaults","newDefaults","escapeTest","escapeReplace","escapeTestNoEncode","escapeReplaceNoEncode","escapeReplacements","getEscapeReplacement","ch","escape","html","encode","replace","unescapeTest","unescape","_","toLowerCase","charAt","String","fromCharCode","parseInt","substring","caret","edit","regex","opt","source","obj","val","getRegex","RegExp","nonWordAndColonTest","originIndependentUrl","cleanUrl","base","href","prot","decodeURIComponent","e","indexOf","resolveUrl","encodeURI","baseUrls","justDomain","protocol","domain","rtrim","relativeBase","noopTest","exec","merge","arguments","hasOwnProperty","splitCells","tableRow","count","row","match","offset","str","escaped","curr","cells","split","trim","shift","pop","splice","push","c","invert","l","suffLen","currChar","findClosingBracket","b","level","checkSanitizeDeprecation","console","warn","repeatString","pattern","result","outputLink","cap","link","raw","lexer","title","text","state","inLink","token","type","tokens","inlineTokens","indentCodeCompensation","matchIndentToCode","indentToCode","map","node","matchIndentInNode","indentInNode","join","Tokenizer","options","_proto","space","src","rules","block","newline","code","codeBlockStyle","fences","lang","heading","trimmed","depth","inline","hr","blockquote","blockTokens","list","istask","ischecked","indent","blankLine","endsWithBlankLine","line","nextLine","rawLine","itemContents","endEarly","bull","isordered","ordered","start","loose","items","itemRegex","trimLeft","search","nextBulletRegex","Math","min","hrRegex","fencesBeginRegex","headingBeginRegex","task","checked","trimRight","top","spacers","filter","t","hasMultipleLineBreaks","every","chars","lineBreaks","_iterator","_step","_char","pre","def","tag","table","item","header","align","rows","j","k","lheading","paragraph","escape$1","inRawBlock","trimmedUrl","rtrimSlash","lastParenIndex","linkLen","_escapes","reflink","links","nolink","emStrong","maskedSrc","prevChar","lDelim","nextChar","punctuation","lLength","rDelim","rLength","delimTotal","midDelimTotal","endReg","rDelimAst","rDelimUnd","lastIndex","_text","index","codespan","hasNonSpaceChars","hasSpaceCharsOnBothEnds","br","del","autolink","url","prevCapZero","_backpedal","inlineText","_paragraph","_label","_title","bullet","listItemStart","_tag","_comment","normal","reflinkSearch","_punctuation","blockSkip","escapedEmSt","_scheme","_email","_attribute","_href","strong","middle","endAst","endUnd","em","_extended_email","out","charCodeAt","random","Lexer","create","inlineQueue","lex","lexInline","_this","leading","tabs","repeat","lastToken","cutSrc","lastParagraphClipped","some","extTokenizer","startBlock","startIndex","Infinity","tempSrc","tempStart","forEach","getStartIndex","errMsg","error","Error","_this2","keepPrevChar","keys","includes","lastIndexOf","startInline","get","Renderer","_code","infostring","quote","_html","slugger","id","slug","body","startatt","listitem","checkbox","tablerow","content","tablecell","flags","image","TextRenderer","Slugger","seen","serialize","getNextSafeSlug","originalSlug","isDryRun","occurenceAccumulator","dryrun","Parser","textRenderer","parse","parser","parseInline","l2","l3","cell","itemBody","ret","renderers","unshift","marked","callback","err","pending","setTimeout","onError","message","_tokens","Promise","all","then","setOptions","use","_len","args","_key","opts","apply","concat","childTokens","hasExtensions","pack","ext","prevRenderer","_len2","_key2","_loop","prop","_len3","_key3","_loop2","prevTokenizer","_len4","_key4","_walkTokens","values","_loop3","_iterator2","_step2","_iterator3","_step3","_iterator4","_step4","_cell"],"sources":["node_modules/marked/lib/marked.umd.js"],"sourcesContent":["/**\n * marked - a markdown parser\n * Copyright (c) 2011-2022, Christopher Jeffrey. (MIT Licensed)\n * https://github.com/markedjs/marked\n */\n\n/**\n * DO NOT EDIT THIS FILE\n * The code in this file is generated from files in ./src/\n */\n\n(function (global, factory) {\n  typeof exports === 'object' && typeof module !== 'undefined' ? factory(exports) :\n  typeof define === 'function' && define.amd ? define(['exports'], factory) :\n  (global = typeof globalThis !== 'undefined' ? globalThis : global || self, factory(global.marked = {}));\n})(this, (function (exports) { 'use strict';\n\n  function _defineProperties(target, props) {\n    for (var i = 0; i < props.length; i++) {\n      var descriptor = props[i];\n      descriptor.enumerable = descriptor.enumerable || false;\n      descriptor.configurable = true;\n      if (\"value\" in descriptor) descriptor.writable = true;\n      Object.defineProperty(target, descriptor.key, descriptor);\n    }\n  }\n\n  function _createClass(Constructor, protoProps, staticProps) {\n    if (protoProps) _defineProperties(Constructor.prototype, protoProps);\n    if (staticProps) _defineProperties(Constructor, staticProps);\n    Object.defineProperty(Constructor, \"prototype\", {\n      writable: false\n    });\n    return Constructor;\n  }\n\n  function _unsupportedIterableToArray(o, minLen) {\n    if (!o) return;\n    if (typeof o === \"string\") return _arrayLikeToArray(o, minLen);\n    var n = Object.prototype.toString.call(o).slice(8, -1);\n    if (n === \"Object\" && o.constructor) n = o.constructor.name;\n    if (n === \"Map\" || n === \"Set\") return Array.from(o);\n    if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen);\n  }\n\n  function _arrayLikeToArray(arr, len) {\n    if (len == null || len > arr.length) len = arr.length;\n\n    for (var i = 0, arr2 = new Array(len); i < len; i++) arr2[i] = arr[i];\n\n    return arr2;\n  }\n\n  function _createForOfIteratorHelperLoose(o, allowArrayLike) {\n    var it = typeof Symbol !== \"undefined\" && o[Symbol.iterator] || o[\"@@iterator\"];\n    if (it) return (it = it.call(o)).next.bind(it);\n\n    if (Array.isArray(o) || (it = _unsupportedIterableToArray(o)) || allowArrayLike && o && typeof o.length === \"number\") {\n      if (it) o = it;\n      var i = 0;\n      return function () {\n        if (i >= o.length) return {\n          done: true\n        };\n        return {\n          done: false,\n          value: o[i++]\n        };\n      };\n    }\n\n    throw new TypeError(\"Invalid attempt to iterate non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n  }\n\n  function getDefaults() {\n    return {\n      async: false,\n      baseUrl: null,\n      breaks: false,\n      extensions: null,\n      gfm: true,\n      headerIds: true,\n      headerPrefix: '',\n      highlight: null,\n      langPrefix: 'language-',\n      mangle: true,\n      pedantic: false,\n      renderer: null,\n      sanitize: false,\n      sanitizer: null,\n      silent: false,\n      smartLists: false,\n      smartypants: false,\n      tokenizer: null,\n      walkTokens: null,\n      xhtml: false\n    };\n  }\n  exports.defaults = getDefaults();\n  function changeDefaults(newDefaults) {\n    exports.defaults = newDefaults;\n  }\n\n  /**\n   * Helpers\n   */\n  var escapeTest = /[&<>\"']/;\n  var escapeReplace = /[&<>\"']/g;\n  var escapeTestNoEncode = /[<>\"']|&(?!#?\\w+;)/;\n  var escapeReplaceNoEncode = /[<>\"']|&(?!#?\\w+;)/g;\n  var escapeReplacements = {\n    '&': '&amp;',\n    '<': '&lt;',\n    '>': '&gt;',\n    '\"': '&quot;',\n    \"'\": '&#39;'\n  };\n\n  var getEscapeReplacement = function getEscapeReplacement(ch) {\n    return escapeReplacements[ch];\n  };\n\n  function escape(html, encode) {\n    if (encode) {\n      if (escapeTest.test(html)) {\n        return html.replace(escapeReplace, getEscapeReplacement);\n      }\n    } else {\n      if (escapeTestNoEncode.test(html)) {\n        return html.replace(escapeReplaceNoEncode, getEscapeReplacement);\n      }\n    }\n\n    return html;\n  }\n  var unescapeTest = /&(#(?:\\d+)|(?:#x[0-9A-Fa-f]+)|(?:\\w+));?/ig;\n  /**\n   * @param {string} html\n   */\n\n  function unescape(html) {\n    // explicitly match decimal, hex, and named HTML entities\n    return html.replace(unescapeTest, function (_, n) {\n      n = n.toLowerCase();\n      if (n === 'colon') return ':';\n\n      if (n.charAt(0) === '#') {\n        return n.charAt(1) === 'x' ? String.fromCharCode(parseInt(n.substring(2), 16)) : String.fromCharCode(+n.substring(1));\n      }\n\n      return '';\n    });\n  }\n  var caret = /(^|[^\\[])\\^/g;\n  /**\n   * @param {string | RegExp} regex\n   * @param {string} opt\n   */\n\n  function edit(regex, opt) {\n    regex = typeof regex === 'string' ? regex : regex.source;\n    opt = opt || '';\n    var obj = {\n      replace: function replace(name, val) {\n        val = val.source || val;\n        val = val.replace(caret, '$1');\n        regex = regex.replace(name, val);\n        return obj;\n      },\n      getRegex: function getRegex() {\n        return new RegExp(regex, opt);\n      }\n    };\n    return obj;\n  }\n  var nonWordAndColonTest = /[^\\w:]/g;\n  var originIndependentUrl = /^$|^[a-z][a-z0-9+.-]*:|^[?#]/i;\n  /**\n   * @param {boolean} sanitize\n   * @param {string} base\n   * @param {string} href\n   */\n\n  function cleanUrl(sanitize, base, href) {\n    if (sanitize) {\n      var prot;\n\n      try {\n        prot = decodeURIComponent(unescape(href)).replace(nonWordAndColonTest, '').toLowerCase();\n      } catch (e) {\n        return null;\n      }\n\n      if (prot.indexOf('javascript:') === 0 || prot.indexOf('vbscript:') === 0 || prot.indexOf('data:') === 0) {\n        return null;\n      }\n    }\n\n    if (base && !originIndependentUrl.test(href)) {\n      href = resolveUrl(base, href);\n    }\n\n    try {\n      href = encodeURI(href).replace(/%25/g, '%');\n    } catch (e) {\n      return null;\n    }\n\n    return href;\n  }\n  var baseUrls = {};\n  var justDomain = /^[^:]+:\\/*[^/]*$/;\n  var protocol = /^([^:]+:)[\\s\\S]*$/;\n  var domain = /^([^:]+:\\/*[^/]*)[\\s\\S]*$/;\n  /**\n   * @param {string} base\n   * @param {string} href\n   */\n\n  function resolveUrl(base, href) {\n    if (!baseUrls[' ' + base]) {\n      // we can ignore everything in base after the last slash of its path component,\n      // but we might need to add _that_\n      // https://tools.ietf.org/html/rfc3986#section-3\n      if (justDomain.test(base)) {\n        baseUrls[' ' + base] = base + '/';\n      } else {\n        baseUrls[' ' + base] = rtrim(base, '/', true);\n      }\n    }\n\n    base = baseUrls[' ' + base];\n    var relativeBase = base.indexOf(':') === -1;\n\n    if (href.substring(0, 2) === '//') {\n      if (relativeBase) {\n        return href;\n      }\n\n      return base.replace(protocol, '$1') + href;\n    } else if (href.charAt(0) === '/') {\n      if (relativeBase) {\n        return href;\n      }\n\n      return base.replace(domain, '$1') + href;\n    } else {\n      return base + href;\n    }\n  }\n  var noopTest = {\n    exec: function noopTest() {}\n  };\n  function merge(obj) {\n    var i = 1,\n        target,\n        key;\n\n    for (; i < arguments.length; i++) {\n      target = arguments[i];\n\n      for (key in target) {\n        if (Object.prototype.hasOwnProperty.call(target, key)) {\n          obj[key] = target[key];\n        }\n      }\n    }\n\n    return obj;\n  }\n  function splitCells(tableRow, count) {\n    // ensure that every cell-delimiting pipe has a space\n    // before it to distinguish it from an escaped pipe\n    var row = tableRow.replace(/\\|/g, function (match, offset, str) {\n      var escaped = false,\n          curr = offset;\n\n      while (--curr >= 0 && str[curr] === '\\\\') {\n        escaped = !escaped;\n      }\n\n      if (escaped) {\n        // odd number of slashes means | is escaped\n        // so we leave it alone\n        return '|';\n      } else {\n        // add space before unescaped |\n        return ' |';\n      }\n    }),\n        cells = row.split(/ \\|/);\n    var i = 0; // First/last cell in a row cannot be empty if it has no leading/trailing pipe\n\n    if (!cells[0].trim()) {\n      cells.shift();\n    }\n\n    if (cells.length > 0 && !cells[cells.length - 1].trim()) {\n      cells.pop();\n    }\n\n    if (cells.length > count) {\n      cells.splice(count);\n    } else {\n      while (cells.length < count) {\n        cells.push('');\n      }\n    }\n\n    for (; i < cells.length; i++) {\n      // leading or trailing whitespace is ignored per the gfm spec\n      cells[i] = cells[i].trim().replace(/\\\\\\|/g, '|');\n    }\n\n    return cells;\n  }\n  /**\n   * Remove trailing 'c's. Equivalent to str.replace(/c*$/, '').\n   * /c*$/ is vulnerable to REDOS.\n   *\n   * @param {string} str\n   * @param {string} c\n   * @param {boolean} invert Remove suffix of non-c chars instead. Default falsey.\n   */\n\n  function rtrim(str, c, invert) {\n    var l = str.length;\n\n    if (l === 0) {\n      return '';\n    } // Length of suffix matching the invert condition.\n\n\n    var suffLen = 0; // Step left until we fail to match the invert condition.\n\n    while (suffLen < l) {\n      var currChar = str.charAt(l - suffLen - 1);\n\n      if (currChar === c && !invert) {\n        suffLen++;\n      } else if (currChar !== c && invert) {\n        suffLen++;\n      } else {\n        break;\n      }\n    }\n\n    return str.slice(0, l - suffLen);\n  }\n  function findClosingBracket(str, b) {\n    if (str.indexOf(b[1]) === -1) {\n      return -1;\n    }\n\n    var l = str.length;\n    var level = 0,\n        i = 0;\n\n    for (; i < l; i++) {\n      if (str[i] === '\\\\') {\n        i++;\n      } else if (str[i] === b[0]) {\n        level++;\n      } else if (str[i] === b[1]) {\n        level--;\n\n        if (level < 0) {\n          return i;\n        }\n      }\n    }\n\n    return -1;\n  }\n  function checkSanitizeDeprecation(opt) {\n    if (opt && opt.sanitize && !opt.silent) {\n      console.warn('marked(): sanitize and sanitizer parameters are deprecated since version 0.7.0, should not be used and will be removed in the future. Read more here: https://marked.js.org/#/USING_ADVANCED.md#options');\n    }\n  } // copied from https://stackoverflow.com/a/5450113/806777\n\n  /**\n   * @param {string} pattern\n   * @param {number} count\n   */\n\n  function repeatString(pattern, count) {\n    if (count < 1) {\n      return '';\n    }\n\n    var result = '';\n\n    while (count > 1) {\n      if (count & 1) {\n        result += pattern;\n      }\n\n      count >>= 1;\n      pattern += pattern;\n    }\n\n    return result + pattern;\n  }\n\n  function outputLink(cap, link, raw, lexer) {\n    var href = link.href;\n    var title = link.title ? escape(link.title) : null;\n    var text = cap[1].replace(/\\\\([\\[\\]])/g, '$1');\n\n    if (cap[0].charAt(0) !== '!') {\n      lexer.state.inLink = true;\n      var token = {\n        type: 'link',\n        raw: raw,\n        href: href,\n        title: title,\n        text: text,\n        tokens: lexer.inlineTokens(text)\n      };\n      lexer.state.inLink = false;\n      return token;\n    }\n\n    return {\n      type: 'image',\n      raw: raw,\n      href: href,\n      title: title,\n      text: escape(text)\n    };\n  }\n\n  function indentCodeCompensation(raw, text) {\n    var matchIndentToCode = raw.match(/^(\\s+)(?:```)/);\n\n    if (matchIndentToCode === null) {\n      return text;\n    }\n\n    var indentToCode = matchIndentToCode[1];\n    return text.split('\\n').map(function (node) {\n      var matchIndentInNode = node.match(/^\\s+/);\n\n      if (matchIndentInNode === null) {\n        return node;\n      }\n\n      var indentInNode = matchIndentInNode[0];\n\n      if (indentInNode.length >= indentToCode.length) {\n        return node.slice(indentToCode.length);\n      }\n\n      return node;\n    }).join('\\n');\n  }\n  /**\n   * Tokenizer\n   */\n\n\n  var Tokenizer = /*#__PURE__*/function () {\n    function Tokenizer(options) {\n      this.options = options || exports.defaults;\n    }\n\n    var _proto = Tokenizer.prototype;\n\n    _proto.space = function space(src) {\n      var cap = this.rules.block.newline.exec(src);\n\n      if (cap && cap[0].length > 0) {\n        return {\n          type: 'space',\n          raw: cap[0]\n        };\n      }\n    };\n\n    _proto.code = function code(src) {\n      var cap = this.rules.block.code.exec(src);\n\n      if (cap) {\n        var text = cap[0].replace(/^ {1,4}/gm, '');\n        return {\n          type: 'code',\n          raw: cap[0],\n          codeBlockStyle: 'indented',\n          text: !this.options.pedantic ? rtrim(text, '\\n') : text\n        };\n      }\n    };\n\n    _proto.fences = function fences(src) {\n      var cap = this.rules.block.fences.exec(src);\n\n      if (cap) {\n        var raw = cap[0];\n        var text = indentCodeCompensation(raw, cap[3] || '');\n        return {\n          type: 'code',\n          raw: raw,\n          lang: cap[2] ? cap[2].trim() : cap[2],\n          text: text\n        };\n      }\n    };\n\n    _proto.heading = function heading(src) {\n      var cap = this.rules.block.heading.exec(src);\n\n      if (cap) {\n        var text = cap[2].trim(); // remove trailing #s\n\n        if (/#$/.test(text)) {\n          var trimmed = rtrim(text, '#');\n\n          if (this.options.pedantic) {\n            text = trimmed.trim();\n          } else if (!trimmed || / $/.test(trimmed)) {\n            // CommonMark requires space before trailing #s\n            text = trimmed.trim();\n          }\n        }\n\n        return {\n          type: 'heading',\n          raw: cap[0],\n          depth: cap[1].length,\n          text: text,\n          tokens: this.lexer.inline(text)\n        };\n      }\n    };\n\n    _proto.hr = function hr(src) {\n      var cap = this.rules.block.hr.exec(src);\n\n      if (cap) {\n        return {\n          type: 'hr',\n          raw: cap[0]\n        };\n      }\n    };\n\n    _proto.blockquote = function blockquote(src) {\n      var cap = this.rules.block.blockquote.exec(src);\n\n      if (cap) {\n        var text = cap[0].replace(/^ *>[ \\t]?/gm, '');\n        return {\n          type: 'blockquote',\n          raw: cap[0],\n          tokens: this.lexer.blockTokens(text, []),\n          text: text\n        };\n      }\n    };\n\n    _proto.list = function list(src) {\n      var cap = this.rules.block.list.exec(src);\n\n      if (cap) {\n        var raw, istask, ischecked, indent, i, blankLine, endsWithBlankLine, line, nextLine, rawLine, itemContents, endEarly;\n        var bull = cap[1].trim();\n        var isordered = bull.length > 1;\n        var list = {\n          type: 'list',\n          raw: '',\n          ordered: isordered,\n          start: isordered ? +bull.slice(0, -1) : '',\n          loose: false,\n          items: []\n        };\n        bull = isordered ? \"\\\\d{1,9}\\\\\" + bull.slice(-1) : \"\\\\\" + bull;\n\n        if (this.options.pedantic) {\n          bull = isordered ? bull : '[*+-]';\n        } // Get next list item\n\n\n        var itemRegex = new RegExp(\"^( {0,3}\" + bull + \")((?:[\\t ][^\\\\n]*)?(?:\\\\n|$))\"); // Check if current bullet point can start a new List Item\n\n        while (src) {\n          endEarly = false;\n\n          if (!(cap = itemRegex.exec(src))) {\n            break;\n          }\n\n          if (this.rules.block.hr.test(src)) {\n            // End list if bullet was actually HR (possibly move into itemRegex?)\n            break;\n          }\n\n          raw = cap[0];\n          src = src.substring(raw.length);\n          line = cap[2].split('\\n', 1)[0];\n          nextLine = src.split('\\n', 1)[0];\n\n          if (this.options.pedantic) {\n            indent = 2;\n            itemContents = line.trimLeft();\n          } else {\n            indent = cap[2].search(/[^ ]/); // Find first non-space char\n\n            indent = indent > 4 ? 1 : indent; // Treat indented code blocks (> 4 spaces) as having only 1 indent\n\n            itemContents = line.slice(indent);\n            indent += cap[1].length;\n          }\n\n          blankLine = false;\n\n          if (!line && /^ *$/.test(nextLine)) {\n            // Items begin with at most one blank line\n            raw += nextLine + '\\n';\n            src = src.substring(nextLine.length + 1);\n            endEarly = true;\n          }\n\n          if (!endEarly) {\n            var nextBulletRegex = new RegExp(\"^ {0,\" + Math.min(3, indent - 1) + \"}(?:[*+-]|\\\\d{1,9}[.)])((?: [^\\\\n]*)?(?:\\\\n|$))\");\n            var hrRegex = new RegExp(\"^ {0,\" + Math.min(3, indent - 1) + \"}((?:- *){3,}|(?:_ *){3,}|(?:\\\\* *){3,})(?:\\\\n+|$)\");\n            var fencesBeginRegex = new RegExp(\"^ {0,\" + Math.min(3, indent - 1) + \"}(?:```|~~~)\");\n            var headingBeginRegex = new RegExp(\"^ {0,\" + Math.min(3, indent - 1) + \"}#\"); // Check if following lines should be included in List Item\n\n            while (src) {\n              rawLine = src.split('\\n', 1)[0];\n              line = rawLine; // Re-align to follow commonmark nesting rules\n\n              if (this.options.pedantic) {\n                line = line.replace(/^ {1,4}(?=( {4})*[^ ])/g, '  ');\n              } // End list item if found code fences\n\n\n              if (fencesBeginRegex.test(line)) {\n                break;\n              } // End list item if found start of new heading\n\n\n              if (headingBeginRegex.test(line)) {\n                break;\n              } // End list item if found start of new bullet\n\n\n              if (nextBulletRegex.test(line)) {\n                break;\n              } // Horizontal rule found\n\n\n              if (hrRegex.test(src)) {\n                break;\n              }\n\n              if (line.search(/[^ ]/) >= indent || !line.trim()) {\n                // Dedent if possible\n                itemContents += '\\n' + line.slice(indent);\n              } else if (!blankLine) {\n                // Until blank line, item doesn't need indentation\n                itemContents += '\\n' + line;\n              } else {\n                // Otherwise, improper indentation ends this item\n                break;\n              }\n\n              if (!blankLine && !line.trim()) {\n                // Check if current line is blank\n                blankLine = true;\n              }\n\n              raw += rawLine + '\\n';\n              src = src.substring(rawLine.length + 1);\n            }\n          }\n\n          if (!list.loose) {\n            // If the previous item ended with a blank line, the list is loose\n            if (endsWithBlankLine) {\n              list.loose = true;\n            } else if (/\\n *\\n *$/.test(raw)) {\n              endsWithBlankLine = true;\n            }\n          } // Check for task list items\n\n\n          if (this.options.gfm) {\n            istask = /^\\[[ xX]\\] /.exec(itemContents);\n\n            if (istask) {\n              ischecked = istask[0] !== '[ ] ';\n              itemContents = itemContents.replace(/^\\[[ xX]\\] +/, '');\n            }\n          }\n\n          list.items.push({\n            type: 'list_item',\n            raw: raw,\n            task: !!istask,\n            checked: ischecked,\n            loose: false,\n            text: itemContents\n          });\n          list.raw += raw;\n        } // Do not consume newlines at end of final item. Alternatively, make itemRegex *start* with any newlines to simplify/speed up endsWithBlankLine logic\n\n\n        list.items[list.items.length - 1].raw = raw.trimRight();\n        list.items[list.items.length - 1].text = itemContents.trimRight();\n        list.raw = list.raw.trimRight();\n        var l = list.items.length; // Item child tokens handled here at end because we needed to have the final item to trim it first\n\n        for (i = 0; i < l; i++) {\n          this.lexer.state.top = false;\n          list.items[i].tokens = this.lexer.blockTokens(list.items[i].text, []);\n          var spacers = list.items[i].tokens.filter(function (t) {\n            return t.type === 'space';\n          });\n          var hasMultipleLineBreaks = spacers.every(function (t) {\n            var chars = t.raw.split('');\n            var lineBreaks = 0;\n\n            for (var _iterator = _createForOfIteratorHelperLoose(chars), _step; !(_step = _iterator()).done;) {\n              var _char = _step.value;\n\n              if (_char === '\\n') {\n                lineBreaks += 1;\n              }\n\n              if (lineBreaks > 1) {\n                return true;\n              }\n            }\n\n            return false;\n          });\n\n          if (!list.loose && spacers.length && hasMultipleLineBreaks) {\n            // Having a single line break doesn't mean a list is loose. A single line break is terminating the last list item\n            list.loose = true;\n            list.items[i].loose = true;\n          }\n        }\n\n        return list;\n      }\n    };\n\n    _proto.html = function html(src) {\n      var cap = this.rules.block.html.exec(src);\n\n      if (cap) {\n        var token = {\n          type: 'html',\n          raw: cap[0],\n          pre: !this.options.sanitizer && (cap[1] === 'pre' || cap[1] === 'script' || cap[1] === 'style'),\n          text: cap[0]\n        };\n\n        if (this.options.sanitize) {\n          var text = this.options.sanitizer ? this.options.sanitizer(cap[0]) : escape(cap[0]);\n          token.type = 'paragraph';\n          token.text = text;\n          token.tokens = this.lexer.inline(text);\n        }\n\n        return token;\n      }\n    };\n\n    _proto.def = function def(src) {\n      var cap = this.rules.block.def.exec(src);\n\n      if (cap) {\n        if (cap[3]) cap[3] = cap[3].substring(1, cap[3].length - 1);\n        var tag = cap[1].toLowerCase().replace(/\\s+/g, ' ');\n        return {\n          type: 'def',\n          tag: tag,\n          raw: cap[0],\n          href: cap[2],\n          title: cap[3]\n        };\n      }\n    };\n\n    _proto.table = function table(src) {\n      var cap = this.rules.block.table.exec(src);\n\n      if (cap) {\n        var item = {\n          type: 'table',\n          header: splitCells(cap[1]).map(function (c) {\n            return {\n              text: c\n            };\n          }),\n          align: cap[2].replace(/^ *|\\| *$/g, '').split(/ *\\| */),\n          rows: cap[3] && cap[3].trim() ? cap[3].replace(/\\n[ \\t]*$/, '').split('\\n') : []\n        };\n\n        if (item.header.length === item.align.length) {\n          item.raw = cap[0];\n          var l = item.align.length;\n          var i, j, k, row;\n\n          for (i = 0; i < l; i++) {\n            if (/^ *-+: *$/.test(item.align[i])) {\n              item.align[i] = 'right';\n            } else if (/^ *:-+: *$/.test(item.align[i])) {\n              item.align[i] = 'center';\n            } else if (/^ *:-+ *$/.test(item.align[i])) {\n              item.align[i] = 'left';\n            } else {\n              item.align[i] = null;\n            }\n          }\n\n          l = item.rows.length;\n\n          for (i = 0; i < l; i++) {\n            item.rows[i] = splitCells(item.rows[i], item.header.length).map(function (c) {\n              return {\n                text: c\n              };\n            });\n          } // parse child tokens inside headers and cells\n          // header child tokens\n\n\n          l = item.header.length;\n\n          for (j = 0; j < l; j++) {\n            item.header[j].tokens = this.lexer.inline(item.header[j].text);\n          } // cell child tokens\n\n\n          l = item.rows.length;\n\n          for (j = 0; j < l; j++) {\n            row = item.rows[j];\n\n            for (k = 0; k < row.length; k++) {\n              row[k].tokens = this.lexer.inline(row[k].text);\n            }\n          }\n\n          return item;\n        }\n      }\n    };\n\n    _proto.lheading = function lheading(src) {\n      var cap = this.rules.block.lheading.exec(src);\n\n      if (cap) {\n        return {\n          type: 'heading',\n          raw: cap[0],\n          depth: cap[2].charAt(0) === '=' ? 1 : 2,\n          text: cap[1],\n          tokens: this.lexer.inline(cap[1])\n        };\n      }\n    };\n\n    _proto.paragraph = function paragraph(src) {\n      var cap = this.rules.block.paragraph.exec(src);\n\n      if (cap) {\n        var text = cap[1].charAt(cap[1].length - 1) === '\\n' ? cap[1].slice(0, -1) : cap[1];\n        return {\n          type: 'paragraph',\n          raw: cap[0],\n          text: text,\n          tokens: this.lexer.inline(text)\n        };\n      }\n    };\n\n    _proto.text = function text(src) {\n      var cap = this.rules.block.text.exec(src);\n\n      if (cap) {\n        return {\n          type: 'text',\n          raw: cap[0],\n          text: cap[0],\n          tokens: this.lexer.inline(cap[0])\n        };\n      }\n    };\n\n    _proto.escape = function escape$1(src) {\n      var cap = this.rules.inline.escape.exec(src);\n\n      if (cap) {\n        return {\n          type: 'escape',\n          raw: cap[0],\n          text: escape(cap[1])\n        };\n      }\n    };\n\n    _proto.tag = function tag(src) {\n      var cap = this.rules.inline.tag.exec(src);\n\n      if (cap) {\n        if (!this.lexer.state.inLink && /^<a /i.test(cap[0])) {\n          this.lexer.state.inLink = true;\n        } else if (this.lexer.state.inLink && /^<\\/a>/i.test(cap[0])) {\n          this.lexer.state.inLink = false;\n        }\n\n        if (!this.lexer.state.inRawBlock && /^<(pre|code|kbd|script)(\\s|>)/i.test(cap[0])) {\n          this.lexer.state.inRawBlock = true;\n        } else if (this.lexer.state.inRawBlock && /^<\\/(pre|code|kbd|script)(\\s|>)/i.test(cap[0])) {\n          this.lexer.state.inRawBlock = false;\n        }\n\n        return {\n          type: this.options.sanitize ? 'text' : 'html',\n          raw: cap[0],\n          inLink: this.lexer.state.inLink,\n          inRawBlock: this.lexer.state.inRawBlock,\n          text: this.options.sanitize ? this.options.sanitizer ? this.options.sanitizer(cap[0]) : escape(cap[0]) : cap[0]\n        };\n      }\n    };\n\n    _proto.link = function link(src) {\n      var cap = this.rules.inline.link.exec(src);\n\n      if (cap) {\n        var trimmedUrl = cap[2].trim();\n\n        if (!this.options.pedantic && /^</.test(trimmedUrl)) {\n          // commonmark requires matching angle brackets\n          if (!/>$/.test(trimmedUrl)) {\n            return;\n          } // ending angle bracket cannot be escaped\n\n\n          var rtrimSlash = rtrim(trimmedUrl.slice(0, -1), '\\\\');\n\n          if ((trimmedUrl.length - rtrimSlash.length) % 2 === 0) {\n            return;\n          }\n        } else {\n          // find closing parenthesis\n          var lastParenIndex = findClosingBracket(cap[2], '()');\n\n          if (lastParenIndex > -1) {\n            var start = cap[0].indexOf('!') === 0 ? 5 : 4;\n            var linkLen = start + cap[1].length + lastParenIndex;\n            cap[2] = cap[2].substring(0, lastParenIndex);\n            cap[0] = cap[0].substring(0, linkLen).trim();\n            cap[3] = '';\n          }\n        }\n\n        var href = cap[2];\n        var title = '';\n\n        if (this.options.pedantic) {\n          // split pedantic href and title\n          var link = /^([^'\"]*[^\\s])\\s+(['\"])(.*)\\2/.exec(href);\n\n          if (link) {\n            href = link[1];\n            title = link[3];\n          }\n        } else {\n          title = cap[3] ? cap[3].slice(1, -1) : '';\n        }\n\n        href = href.trim();\n\n        if (/^</.test(href)) {\n          if (this.options.pedantic && !/>$/.test(trimmedUrl)) {\n            // pedantic allows starting angle bracket without ending angle bracket\n            href = href.slice(1);\n          } else {\n            href = href.slice(1, -1);\n          }\n        }\n\n        return outputLink(cap, {\n          href: href ? href.replace(this.rules.inline._escapes, '$1') : href,\n          title: title ? title.replace(this.rules.inline._escapes, '$1') : title\n        }, cap[0], this.lexer);\n      }\n    };\n\n    _proto.reflink = function reflink(src, links) {\n      var cap;\n\n      if ((cap = this.rules.inline.reflink.exec(src)) || (cap = this.rules.inline.nolink.exec(src))) {\n        var link = (cap[2] || cap[1]).replace(/\\s+/g, ' ');\n        link = links[link.toLowerCase()];\n\n        if (!link || !link.href) {\n          var text = cap[0].charAt(0);\n          return {\n            type: 'text',\n            raw: text,\n            text: text\n          };\n        }\n\n        return outputLink(cap, link, cap[0], this.lexer);\n      }\n    };\n\n    _proto.emStrong = function emStrong(src, maskedSrc, prevChar) {\n      if (prevChar === void 0) {\n        prevChar = '';\n      }\n\n      var match = this.rules.inline.emStrong.lDelim.exec(src);\n      if (!match) return; // _ can't be between two alphanumerics. \\p{L}\\p{N} includes non-english alphabet/numbers as well\n\n      if (match[3] && prevChar.match(/(?:[0-9A-Za-z\\xAA\\xB2\\xB3\\xB5\\xB9\\xBA\\xBC-\\xBE\\xC0-\\xD6\\xD8-\\xF6\\xF8-\\u02C1\\u02C6-\\u02D1\\u02E0-\\u02E4\\u02EC\\u02EE\\u0370-\\u0374\\u0376\\u0377\\u037A-\\u037D\\u037F\\u0386\\u0388-\\u038A\\u038C\\u038E-\\u03A1\\u03A3-\\u03F5\\u03F7-\\u0481\\u048A-\\u052F\\u0531-\\u0556\\u0559\\u0560-\\u0588\\u05D0-\\u05EA\\u05EF-\\u05F2\\u0620-\\u064A\\u0660-\\u0669\\u066E\\u066F\\u0671-\\u06D3\\u06D5\\u06E5\\u06E6\\u06EE-\\u06FC\\u06FF\\u0710\\u0712-\\u072F\\u074D-\\u07A5\\u07B1\\u07C0-\\u07EA\\u07F4\\u07F5\\u07FA\\u0800-\\u0815\\u081A\\u0824\\u0828\\u0840-\\u0858\\u0860-\\u086A\\u0870-\\u0887\\u0889-\\u088E\\u08A0-\\u08C9\\u0904-\\u0939\\u093D\\u0950\\u0958-\\u0961\\u0966-\\u096F\\u0971-\\u0980\\u0985-\\u098C\\u098F\\u0990\\u0993-\\u09A8\\u09AA-\\u09B0\\u09B2\\u09B6-\\u09B9\\u09BD\\u09CE\\u09DC\\u09DD\\u09DF-\\u09E1\\u09E6-\\u09F1\\u09F4-\\u09F9\\u09FC\\u0A05-\\u0A0A\\u0A0F\\u0A10\\u0A13-\\u0A28\\u0A2A-\\u0A30\\u0A32\\u0A33\\u0A35\\u0A36\\u0A38\\u0A39\\u0A59-\\u0A5C\\u0A5E\\u0A66-\\u0A6F\\u0A72-\\u0A74\\u0A85-\\u0A8D\\u0A8F-\\u0A91\\u0A93-\\u0AA8\\u0AAA-\\u0AB0\\u0AB2\\u0AB3\\u0AB5-\\u0AB9\\u0ABD\\u0AD0\\u0AE0\\u0AE1\\u0AE6-\\u0AEF\\u0AF9\\u0B05-\\u0B0C\\u0B0F\\u0B10\\u0B13-\\u0B28\\u0B2A-\\u0B30\\u0B32\\u0B33\\u0B35-\\u0B39\\u0B3D\\u0B5C\\u0B5D\\u0B5F-\\u0B61\\u0B66-\\u0B6F\\u0B71-\\u0B77\\u0B83\\u0B85-\\u0B8A\\u0B8E-\\u0B90\\u0B92-\\u0B95\\u0B99\\u0B9A\\u0B9C\\u0B9E\\u0B9F\\u0BA3\\u0BA4\\u0BA8-\\u0BAA\\u0BAE-\\u0BB9\\u0BD0\\u0BE6-\\u0BF2\\u0C05-\\u0C0C\\u0C0E-\\u0C10\\u0C12-\\u0C28\\u0C2A-\\u0C39\\u0C3D\\u0C58-\\u0C5A\\u0C5D\\u0C60\\u0C61\\u0C66-\\u0C6F\\u0C78-\\u0C7E\\u0C80\\u0C85-\\u0C8C\\u0C8E-\\u0C90\\u0C92-\\u0CA8\\u0CAA-\\u0CB3\\u0CB5-\\u0CB9\\u0CBD\\u0CDD\\u0CDE\\u0CE0\\u0CE1\\u0CE6-\\u0CEF\\u0CF1\\u0CF2\\u0D04-\\u0D0C\\u0D0E-\\u0D10\\u0D12-\\u0D3A\\u0D3D\\u0D4E\\u0D54-\\u0D56\\u0D58-\\u0D61\\u0D66-\\u0D78\\u0D7A-\\u0D7F\\u0D85-\\u0D96\\u0D9A-\\u0DB1\\u0DB3-\\u0DBB\\u0DBD\\u0DC0-\\u0DC6\\u0DE6-\\u0DEF\\u0E01-\\u0E30\\u0E32\\u0E33\\u0E40-\\u0E46\\u0E50-\\u0E59\\u0E81\\u0E82\\u0E84\\u0E86-\\u0E8A\\u0E8C-\\u0EA3\\u0EA5\\u0EA7-\\u0EB0\\u0EB2\\u0EB3\\u0EBD\\u0EC0-\\u0EC4\\u0EC6\\u0ED0-\\u0ED9\\u0EDC-\\u0EDF\\u0F00\\u0F20-\\u0F33\\u0F40-\\u0F47\\u0F49-\\u0F6C\\u0F88-\\u0F8C\\u1000-\\u102A\\u103F-\\u1049\\u1050-\\u1055\\u105A-\\u105D\\u1061\\u1065\\u1066\\u106E-\\u1070\\u1075-\\u1081\\u108E\\u1090-\\u1099\\u10A0-\\u10C5\\u10C7\\u10CD\\u10D0-\\u10FA\\u10FC-\\u1248\\u124A-\\u124D\\u1250-\\u1256\\u1258\\u125A-\\u125D\\u1260-\\u1288\\u128A-\\u128D\\u1290-\\u12B0\\u12B2-\\u12B5\\u12B8-\\u12BE\\u12C0\\u12C2-\\u12C5\\u12C8-\\u12D6\\u12D8-\\u1310\\u1312-\\u1315\\u1318-\\u135A\\u1369-\\u137C\\u1380-\\u138F\\u13A0-\\u13F5\\u13F8-\\u13FD\\u1401-\\u166C\\u166F-\\u167F\\u1681-\\u169A\\u16A0-\\u16EA\\u16EE-\\u16F8\\u1700-\\u1711\\u171F-\\u1731\\u1740-\\u1751\\u1760-\\u176C\\u176E-\\u1770\\u1780-\\u17B3\\u17D7\\u17DC\\u17E0-\\u17E9\\u17F0-\\u17F9\\u1810-\\u1819\\u1820-\\u1878\\u1880-\\u1884\\u1887-\\u18A8\\u18AA\\u18B0-\\u18F5\\u1900-\\u191E\\u1946-\\u196D\\u1970-\\u1974\\u1980-\\u19AB\\u19B0-\\u19C9\\u19D0-\\u19DA\\u1A00-\\u1A16\\u1A20-\\u1A54\\u1A80-\\u1A89\\u1A90-\\u1A99\\u1AA7\\u1B05-\\u1B33\\u1B45-\\u1B4C\\u1B50-\\u1B59\\u1B83-\\u1BA0\\u1BAE-\\u1BE5\\u1C00-\\u1C23\\u1C40-\\u1C49\\u1C4D-\\u1C7D\\u1C80-\\u1C88\\u1C90-\\u1CBA\\u1CBD-\\u1CBF\\u1CE9-\\u1CEC\\u1CEE-\\u1CF3\\u1CF5\\u1CF6\\u1CFA\\u1D00-\\u1DBF\\u1E00-\\u1F15\\u1F18-\\u1F1D\\u1F20-\\u1F45\\u1F48-\\u1F4D\\u1F50-\\u1F57\\u1F59\\u1F5B\\u1F5D\\u1F5F-\\u1F7D\\u1F80-\\u1FB4\\u1FB6-\\u1FBC\\u1FBE\\u1FC2-\\u1FC4\\u1FC6-\\u1FCC\\u1FD0-\\u1FD3\\u1FD6-\\u1FDB\\u1FE0-\\u1FEC\\u1FF2-\\u1FF4\\u1FF6-\\u1FFC\\u2070\\u2071\\u2074-\\u2079\\u207F-\\u2089\\u2090-\\u209C\\u2102\\u2107\\u210A-\\u2113\\u2115\\u2119-\\u211D\\u2124\\u2126\\u2128\\u212A-\\u212D\\u212F-\\u2139\\u213C-\\u213F\\u2145-\\u2149\\u214E\\u2150-\\u2189\\u2460-\\u249B\\u24EA-\\u24FF\\u2776-\\u2793\\u2C00-\\u2CE4\\u2CEB-\\u2CEE\\u2CF2\\u2CF3\\u2CFD\\u2D00-\\u2D25\\u2D27\\u2D2D\\u2D30-\\u2D67\\u2D6F\\u2D80-\\u2D96\\u2DA0-\\u2DA6\\u2DA8-\\u2DAE\\u2DB0-\\u2DB6\\u2DB8-\\u2DBE\\u2DC0-\\u2DC6\\u2DC8-\\u2DCE\\u2DD0-\\u2DD6\\u2DD8-\\u2DDE\\u2E2F\\u3005-\\u3007\\u3021-\\u3029\\u3031-\\u3035\\u3038-\\u303C\\u3041-\\u3096\\u309D-\\u309F\\u30A1-\\u30FA\\u30FC-\\u30FF\\u3105-\\u312F\\u3131-\\u318E\\u3192-\\u3195\\u31A0-\\u31BF\\u31F0-\\u31FF\\u3220-\\u3229\\u3248-\\u324F\\u3251-\\u325F\\u3280-\\u3289\\u32B1-\\u32BF\\u3400-\\u4DBF\\u4E00-\\uA48C\\uA4D0-\\uA4FD\\uA500-\\uA60C\\uA610-\\uA62B\\uA640-\\uA66E\\uA67F-\\uA69D\\uA6A0-\\uA6EF\\uA717-\\uA71F\\uA722-\\uA788\\uA78B-\\uA7CA\\uA7D0\\uA7D1\\uA7D3\\uA7D5-\\uA7D9\\uA7F2-\\uA801\\uA803-\\uA805\\uA807-\\uA80A\\uA80C-\\uA822\\uA830-\\uA835\\uA840-\\uA873\\uA882-\\uA8B3\\uA8D0-\\uA8D9\\uA8F2-\\uA8F7\\uA8FB\\uA8FD\\uA8FE\\uA900-\\uA925\\uA930-\\uA946\\uA960-\\uA97C\\uA984-\\uA9B2\\uA9CF-\\uA9D9\\uA9E0-\\uA9E4\\uA9E6-\\uA9FE\\uAA00-\\uAA28\\uAA40-\\uAA42\\uAA44-\\uAA4B\\uAA50-\\uAA59\\uAA60-\\uAA76\\uAA7A\\uAA7E-\\uAAAF\\uAAB1\\uAAB5\\uAAB6\\uAAB9-\\uAABD\\uAAC0\\uAAC2\\uAADB-\\uAADD\\uAAE0-\\uAAEA\\uAAF2-\\uAAF4\\uAB01-\\uAB06\\uAB09-\\uAB0E\\uAB11-\\uAB16\\uAB20-\\uAB26\\uAB28-\\uAB2E\\uAB30-\\uAB5A\\uAB5C-\\uAB69\\uAB70-\\uABE2\\uABF0-\\uABF9\\uAC00-\\uD7A3\\uD7B0-\\uD7C6\\uD7CB-\\uD7FB\\uF900-\\uFA6D\\uFA70-\\uFAD9\\uFB00-\\uFB06\\uFB13-\\uFB17\\uFB1D\\uFB1F-\\uFB28\\uFB2A-\\uFB36\\uFB38-\\uFB3C\\uFB3E\\uFB40\\uFB41\\uFB43\\uFB44\\uFB46-\\uFBB1\\uFBD3-\\uFD3D\\uFD50-\\uFD8F\\uFD92-\\uFDC7\\uFDF0-\\uFDFB\\uFE70-\\uFE74\\uFE76-\\uFEFC\\uFF10-\\uFF19\\uFF21-\\uFF3A\\uFF41-\\uFF5A\\uFF66-\\uFFBE\\uFFC2-\\uFFC7\\uFFCA-\\uFFCF\\uFFD2-\\uFFD7\\uFFDA-\\uFFDC]|\\uD800[\\uDC00-\\uDC0B\\uDC0D-\\uDC26\\uDC28-\\uDC3A\\uDC3C\\uDC3D\\uDC3F-\\uDC4D\\uDC50-\\uDC5D\\uDC80-\\uDCFA\\uDD07-\\uDD33\\uDD40-\\uDD78\\uDD8A\\uDD8B\\uDE80-\\uDE9C\\uDEA0-\\uDED0\\uDEE1-\\uDEFB\\uDF00-\\uDF23\\uDF2D-\\uDF4A\\uDF50-\\uDF75\\uDF80-\\uDF9D\\uDFA0-\\uDFC3\\uDFC8-\\uDFCF\\uDFD1-\\uDFD5]|\\uD801[\\uDC00-\\uDC9D\\uDCA0-\\uDCA9\\uDCB0-\\uDCD3\\uDCD8-\\uDCFB\\uDD00-\\uDD27\\uDD30-\\uDD63\\uDD70-\\uDD7A\\uDD7C-\\uDD8A\\uDD8C-\\uDD92\\uDD94\\uDD95\\uDD97-\\uDDA1\\uDDA3-\\uDDB1\\uDDB3-\\uDDB9\\uDDBB\\uDDBC\\uDE00-\\uDF36\\uDF40-\\uDF55\\uDF60-\\uDF67\\uDF80-\\uDF85\\uDF87-\\uDFB0\\uDFB2-\\uDFBA]|\\uD802[\\uDC00-\\uDC05\\uDC08\\uDC0A-\\uDC35\\uDC37\\uDC38\\uDC3C\\uDC3F-\\uDC55\\uDC58-\\uDC76\\uDC79-\\uDC9E\\uDCA7-\\uDCAF\\uDCE0-\\uDCF2\\uDCF4\\uDCF5\\uDCFB-\\uDD1B\\uDD20-\\uDD39\\uDD80-\\uDDB7\\uDDBC-\\uDDCF\\uDDD2-\\uDE00\\uDE10-\\uDE13\\uDE15-\\uDE17\\uDE19-\\uDE35\\uDE40-\\uDE48\\uDE60-\\uDE7E\\uDE80-\\uDE9F\\uDEC0-\\uDEC7\\uDEC9-\\uDEE4\\uDEEB-\\uDEEF\\uDF00-\\uDF35\\uDF40-\\uDF55\\uDF58-\\uDF72\\uDF78-\\uDF91\\uDFA9-\\uDFAF]|\\uD803[\\uDC00-\\uDC48\\uDC80-\\uDCB2\\uDCC0-\\uDCF2\\uDCFA-\\uDD23\\uDD30-\\uDD39\\uDE60-\\uDE7E\\uDE80-\\uDEA9\\uDEB0\\uDEB1\\uDF00-\\uDF27\\uDF30-\\uDF45\\uDF51-\\uDF54\\uDF70-\\uDF81\\uDFB0-\\uDFCB\\uDFE0-\\uDFF6]|\\uD804[\\uDC03-\\uDC37\\uDC52-\\uDC6F\\uDC71\\uDC72\\uDC75\\uDC83-\\uDCAF\\uDCD0-\\uDCE8\\uDCF0-\\uDCF9\\uDD03-\\uDD26\\uDD36-\\uDD3F\\uDD44\\uDD47\\uDD50-\\uDD72\\uDD76\\uDD83-\\uDDB2\\uDDC1-\\uDDC4\\uDDD0-\\uDDDA\\uDDDC\\uDDE1-\\uDDF4\\uDE00-\\uDE11\\uDE13-\\uDE2B\\uDE80-\\uDE86\\uDE88\\uDE8A-\\uDE8D\\uDE8F-\\uDE9D\\uDE9F-\\uDEA8\\uDEB0-\\uDEDE\\uDEF0-\\uDEF9\\uDF05-\\uDF0C\\uDF0F\\uDF10\\uDF13-\\uDF28\\uDF2A-\\uDF30\\uDF32\\uDF33\\uDF35-\\uDF39\\uDF3D\\uDF50\\uDF5D-\\uDF61]|\\uD805[\\uDC00-\\uDC34\\uDC47-\\uDC4A\\uDC50-\\uDC59\\uDC5F-\\uDC61\\uDC80-\\uDCAF\\uDCC4\\uDCC5\\uDCC7\\uDCD0-\\uDCD9\\uDD80-\\uDDAE\\uDDD8-\\uDDDB\\uDE00-\\uDE2F\\uDE44\\uDE50-\\uDE59\\uDE80-\\uDEAA\\uDEB8\\uDEC0-\\uDEC9\\uDF00-\\uDF1A\\uDF30-\\uDF3B\\uDF40-\\uDF46]|\\uD806[\\uDC00-\\uDC2B\\uDCA0-\\uDCF2\\uDCFF-\\uDD06\\uDD09\\uDD0C-\\uDD13\\uDD15\\uDD16\\uDD18-\\uDD2F\\uDD3F\\uDD41\\uDD50-\\uDD59\\uDDA0-\\uDDA7\\uDDAA-\\uDDD0\\uDDE1\\uDDE3\\uDE00\\uDE0B-\\uDE32\\uDE3A\\uDE50\\uDE5C-\\uDE89\\uDE9D\\uDEB0-\\uDEF8]|\\uD807[\\uDC00-\\uDC08\\uDC0A-\\uDC2E\\uDC40\\uDC50-\\uDC6C\\uDC72-\\uDC8F\\uDD00-\\uDD06\\uDD08\\uDD09\\uDD0B-\\uDD30\\uDD46\\uDD50-\\uDD59\\uDD60-\\uDD65\\uDD67\\uDD68\\uDD6A-\\uDD89\\uDD98\\uDDA0-\\uDDA9\\uDEE0-\\uDEF2\\uDFB0\\uDFC0-\\uDFD4]|\\uD808[\\uDC00-\\uDF99]|\\uD809[\\uDC00-\\uDC6E\\uDC80-\\uDD43]|\\uD80B[\\uDF90-\\uDFF0]|[\\uD80C\\uD81C-\\uD820\\uD822\\uD840-\\uD868\\uD86A-\\uD86C\\uD86F-\\uD872\\uD874-\\uD879\\uD880-\\uD883][\\uDC00-\\uDFFF]|\\uD80D[\\uDC00-\\uDC2E]|\\uD811[\\uDC00-\\uDE46]|\\uD81A[\\uDC00-\\uDE38\\uDE40-\\uDE5E\\uDE60-\\uDE69\\uDE70-\\uDEBE\\uDEC0-\\uDEC9\\uDED0-\\uDEED\\uDF00-\\uDF2F\\uDF40-\\uDF43\\uDF50-\\uDF59\\uDF5B-\\uDF61\\uDF63-\\uDF77\\uDF7D-\\uDF8F]|\\uD81B[\\uDE40-\\uDE96\\uDF00-\\uDF4A\\uDF50\\uDF93-\\uDF9F\\uDFE0\\uDFE1\\uDFE3]|\\uD821[\\uDC00-\\uDFF7]|\\uD823[\\uDC00-\\uDCD5\\uDD00-\\uDD08]|\\uD82B[\\uDFF0-\\uDFF3\\uDFF5-\\uDFFB\\uDFFD\\uDFFE]|\\uD82C[\\uDC00-\\uDD22\\uDD50-\\uDD52\\uDD64-\\uDD67\\uDD70-\\uDEFB]|\\uD82F[\\uDC00-\\uDC6A\\uDC70-\\uDC7C\\uDC80-\\uDC88\\uDC90-\\uDC99]|\\uD834[\\uDEE0-\\uDEF3\\uDF60-\\uDF78]|\\uD835[\\uDC00-\\uDC54\\uDC56-\\uDC9C\\uDC9E\\uDC9F\\uDCA2\\uDCA5\\uDCA6\\uDCA9-\\uDCAC\\uDCAE-\\uDCB9\\uDCBB\\uDCBD-\\uDCC3\\uDCC5-\\uDD05\\uDD07-\\uDD0A\\uDD0D-\\uDD14\\uDD16-\\uDD1C\\uDD1E-\\uDD39\\uDD3B-\\uDD3E\\uDD40-\\uDD44\\uDD46\\uDD4A-\\uDD50\\uDD52-\\uDEA5\\uDEA8-\\uDEC0\\uDEC2-\\uDEDA\\uDEDC-\\uDEFA\\uDEFC-\\uDF14\\uDF16-\\uDF34\\uDF36-\\uDF4E\\uDF50-\\uDF6E\\uDF70-\\uDF88\\uDF8A-\\uDFA8\\uDFAA-\\uDFC2\\uDFC4-\\uDFCB\\uDFCE-\\uDFFF]|\\uD837[\\uDF00-\\uDF1E]|\\uD838[\\uDD00-\\uDD2C\\uDD37-\\uDD3D\\uDD40-\\uDD49\\uDD4E\\uDE90-\\uDEAD\\uDEC0-\\uDEEB\\uDEF0-\\uDEF9]|\\uD839[\\uDFE0-\\uDFE6\\uDFE8-\\uDFEB\\uDFED\\uDFEE\\uDFF0-\\uDFFE]|\\uD83A[\\uDC00-\\uDCC4\\uDCC7-\\uDCCF\\uDD00-\\uDD43\\uDD4B\\uDD50-\\uDD59]|\\uD83B[\\uDC71-\\uDCAB\\uDCAD-\\uDCAF\\uDCB1-\\uDCB4\\uDD01-\\uDD2D\\uDD2F-\\uDD3D\\uDE00-\\uDE03\\uDE05-\\uDE1F\\uDE21\\uDE22\\uDE24\\uDE27\\uDE29-\\uDE32\\uDE34-\\uDE37\\uDE39\\uDE3B\\uDE42\\uDE47\\uDE49\\uDE4B\\uDE4D-\\uDE4F\\uDE51\\uDE52\\uDE54\\uDE57\\uDE59\\uDE5B\\uDE5D\\uDE5F\\uDE61\\uDE62\\uDE64\\uDE67-\\uDE6A\\uDE6C-\\uDE72\\uDE74-\\uDE77\\uDE79-\\uDE7C\\uDE7E\\uDE80-\\uDE89\\uDE8B-\\uDE9B\\uDEA1-\\uDEA3\\uDEA5-\\uDEA9\\uDEAB-\\uDEBB]|\\uD83C[\\uDD00-\\uDD0C]|\\uD83E[\\uDFF0-\\uDFF9]|\\uD869[\\uDC00-\\uDEDF\\uDF00-\\uDFFF]|\\uD86D[\\uDC00-\\uDF38\\uDF40-\\uDFFF]|\\uD86E[\\uDC00-\\uDC1D\\uDC20-\\uDFFF]|\\uD873[\\uDC00-\\uDEA1\\uDEB0-\\uDFFF]|\\uD87A[\\uDC00-\\uDFE0]|\\uD87E[\\uDC00-\\uDE1D]|\\uD884[\\uDC00-\\uDF4A])/)) return;\n      var nextChar = match[1] || match[2] || '';\n\n      if (!nextChar || nextChar && (prevChar === '' || this.rules.inline.punctuation.exec(prevChar))) {\n        var lLength = match[0].length - 1;\n        var rDelim,\n            rLength,\n            delimTotal = lLength,\n            midDelimTotal = 0;\n        var endReg = match[0][0] === '*' ? this.rules.inline.emStrong.rDelimAst : this.rules.inline.emStrong.rDelimUnd;\n        endReg.lastIndex = 0; // Clip maskedSrc to same section of string as src (move to lexer?)\n\n        maskedSrc = maskedSrc.slice(-1 * src.length + lLength);\n\n        while ((match = endReg.exec(maskedSrc)) != null) {\n          rDelim = match[1] || match[2] || match[3] || match[4] || match[5] || match[6];\n          if (!rDelim) continue; // skip single * in __abc*abc__\n\n          rLength = rDelim.length;\n\n          if (match[3] || match[4]) {\n            // found another Left Delim\n            delimTotal += rLength;\n            continue;\n          } else if (match[5] || match[6]) {\n            // either Left or Right Delim\n            if (lLength % 3 && !((lLength + rLength) % 3)) {\n              midDelimTotal += rLength;\n              continue; // CommonMark Emphasis Rules 9-10\n            }\n          }\n\n          delimTotal -= rLength;\n          if (delimTotal > 0) continue; // Haven't found enough closing delimiters\n          // Remove extra characters. *a*** -> *a*\n\n          rLength = Math.min(rLength, rLength + delimTotal + midDelimTotal); // Create `em` if smallest delimiter has odd char count. *a***\n\n          if (Math.min(lLength, rLength) % 2) {\n            var _text = src.slice(1, lLength + match.index + rLength);\n\n            return {\n              type: 'em',\n              raw: src.slice(0, lLength + match.index + rLength + 1),\n              text: _text,\n              tokens: this.lexer.inlineTokens(_text)\n            };\n          } // Create 'strong' if smallest delimiter has even char count. **a***\n\n\n          var text = src.slice(2, lLength + match.index + rLength - 1);\n          return {\n            type: 'strong',\n            raw: src.slice(0, lLength + match.index + rLength + 1),\n            text: text,\n            tokens: this.lexer.inlineTokens(text)\n          };\n        }\n      }\n    };\n\n    _proto.codespan = function codespan(src) {\n      var cap = this.rules.inline.code.exec(src);\n\n      if (cap) {\n        var text = cap[2].replace(/\\n/g, ' ');\n        var hasNonSpaceChars = /[^ ]/.test(text);\n        var hasSpaceCharsOnBothEnds = /^ /.test(text) && / $/.test(text);\n\n        if (hasNonSpaceChars && hasSpaceCharsOnBothEnds) {\n          text = text.substring(1, text.length - 1);\n        }\n\n        text = escape(text, true);\n        return {\n          type: 'codespan',\n          raw: cap[0],\n          text: text\n        };\n      }\n    };\n\n    _proto.br = function br(src) {\n      var cap = this.rules.inline.br.exec(src);\n\n      if (cap) {\n        return {\n          type: 'br',\n          raw: cap[0]\n        };\n      }\n    };\n\n    _proto.del = function del(src) {\n      var cap = this.rules.inline.del.exec(src);\n\n      if (cap) {\n        return {\n          type: 'del',\n          raw: cap[0],\n          text: cap[2],\n          tokens: this.lexer.inlineTokens(cap[2])\n        };\n      }\n    };\n\n    _proto.autolink = function autolink(src, mangle) {\n      var cap = this.rules.inline.autolink.exec(src);\n\n      if (cap) {\n        var text, href;\n\n        if (cap[2] === '@') {\n          text = escape(this.options.mangle ? mangle(cap[1]) : cap[1]);\n          href = 'mailto:' + text;\n        } else {\n          text = escape(cap[1]);\n          href = text;\n        }\n\n        return {\n          type: 'link',\n          raw: cap[0],\n          text: text,\n          href: href,\n          tokens: [{\n            type: 'text',\n            raw: text,\n            text: text\n          }]\n        };\n      }\n    };\n\n    _proto.url = function url(src, mangle) {\n      var cap;\n\n      if (cap = this.rules.inline.url.exec(src)) {\n        var text, href;\n\n        if (cap[2] === '@') {\n          text = escape(this.options.mangle ? mangle(cap[0]) : cap[0]);\n          href = 'mailto:' + text;\n        } else {\n          // do extended autolink path validation\n          var prevCapZero;\n\n          do {\n            prevCapZero = cap[0];\n            cap[0] = this.rules.inline._backpedal.exec(cap[0])[0];\n          } while (prevCapZero !== cap[0]);\n\n          text = escape(cap[0]);\n\n          if (cap[1] === 'www.') {\n            href = 'http://' + text;\n          } else {\n            href = text;\n          }\n        }\n\n        return {\n          type: 'link',\n          raw: cap[0],\n          text: text,\n          href: href,\n          tokens: [{\n            type: 'text',\n            raw: text,\n            text: text\n          }]\n        };\n      }\n    };\n\n    _proto.inlineText = function inlineText(src, smartypants) {\n      var cap = this.rules.inline.text.exec(src);\n\n      if (cap) {\n        var text;\n\n        if (this.lexer.state.inRawBlock) {\n          text = this.options.sanitize ? this.options.sanitizer ? this.options.sanitizer(cap[0]) : escape(cap[0]) : cap[0];\n        } else {\n          text = escape(this.options.smartypants ? smartypants(cap[0]) : cap[0]);\n        }\n\n        return {\n          type: 'text',\n          raw: cap[0],\n          text: text\n        };\n      }\n    };\n\n    return Tokenizer;\n  }();\n\n  /**\n   * Block-Level Grammar\n   */\n\n  var block = {\n    newline: /^(?: *(?:\\n|$))+/,\n    code: /^( {4}[^\\n]+(?:\\n(?: *(?:\\n|$))*)?)+/,\n    fences: /^ {0,3}(`{3,}(?=[^`\\n]*\\n)|~{3,})([^\\n]*)\\n(?:|([\\s\\S]*?)\\n)(?: {0,3}\\1[~`]* *(?=\\n|$)|$)/,\n    hr: /^ {0,3}((?:-[\\t ]*){3,}|(?:_[ \\t]*){3,}|(?:\\*[ \\t]*){3,})(?:\\n+|$)/,\n    heading: /^ {0,3}(#{1,6})(?=\\s|$)(.*)(?:\\n+|$)/,\n    blockquote: /^( {0,3}> ?(paragraph|[^\\n]*)(?:\\n|$))+/,\n    list: /^( {0,3}bull)([ \\t][^\\n]+?)?(?:\\n|$)/,\n    html: '^ {0,3}(?:' // optional indentation\n    + '<(script|pre|style|textarea)[\\\\s>][\\\\s\\\\S]*?(?:</\\\\1>[^\\\\n]*\\\\n+|$)' // (1)\n    + '|comment[^\\\\n]*(\\\\n+|$)' // (2)\n    + '|<\\\\?[\\\\s\\\\S]*?(?:\\\\?>\\\\n*|$)' // (3)\n    + '|<![A-Z][\\\\s\\\\S]*?(?:>\\\\n*|$)' // (4)\n    + '|<!\\\\[CDATA\\\\[[\\\\s\\\\S]*?(?:\\\\]\\\\]>\\\\n*|$)' // (5)\n    + '|</?(tag)(?: +|\\\\n|/?>)[\\\\s\\\\S]*?(?:(?:\\\\n *)+\\\\n|$)' // (6)\n    + '|<(?!script|pre|style|textarea)([a-z][\\\\w-]*)(?:attribute)*? */?>(?=[ \\\\t]*(?:\\\\n|$))[\\\\s\\\\S]*?(?:(?:\\\\n *)+\\\\n|$)' // (7) open tag\n    + '|</(?!script|pre|style|textarea)[a-z][\\\\w-]*\\\\s*>(?=[ \\\\t]*(?:\\\\n|$))[\\\\s\\\\S]*?(?:(?:\\\\n *)+\\\\n|$)' // (7) closing tag\n    + ')',\n    def: /^ {0,3}\\[(label)\\]: *(?:\\n *)?<?([^\\s>]+)>?(?:(?: +(?:\\n *)?| *\\n *)(title))? *(?:\\n+|$)/,\n    table: noopTest,\n    lheading: /^([^\\n]+)\\n {0,3}(=+|-+) *(?:\\n+|$)/,\n    // regex template, placeholders will be replaced according to different paragraph\n    // interruption rules of commonmark and the original markdown spec:\n    _paragraph: /^([^\\n]+(?:\\n(?!hr|heading|lheading|blockquote|fences|list|html|table| +\\n)[^\\n]+)*)/,\n    text: /^[^\\n]+/\n  };\n  block._label = /(?!\\s*\\])(?:\\\\.|[^\\[\\]\\\\])+/;\n  block._title = /(?:\"(?:\\\\\"?|[^\"\\\\])*\"|'[^'\\n]*(?:\\n[^'\\n]+)*\\n?'|\\([^()]*\\))/;\n  block.def = edit(block.def).replace('label', block._label).replace('title', block._title).getRegex();\n  block.bullet = /(?:[*+-]|\\d{1,9}[.)])/;\n  block.listItemStart = edit(/^( *)(bull) */).replace('bull', block.bullet).getRegex();\n  block.list = edit(block.list).replace(/bull/g, block.bullet).replace('hr', '\\\\n+(?=\\\\1?(?:(?:- *){3,}|(?:_ *){3,}|(?:\\\\* *){3,})(?:\\\\n+|$))').replace('def', '\\\\n+(?=' + block.def.source + ')').getRegex();\n  block._tag = 'address|article|aside|base|basefont|blockquote|body|caption' + '|center|col|colgroup|dd|details|dialog|dir|div|dl|dt|fieldset|figcaption' + '|figure|footer|form|frame|frameset|h[1-6]|head|header|hr|html|iframe' + '|legend|li|link|main|menu|menuitem|meta|nav|noframes|ol|optgroup|option' + '|p|param|section|source|summary|table|tbody|td|tfoot|th|thead|title|tr' + '|track|ul';\n  block._comment = /<!--(?!-?>)[\\s\\S]*?(?:-->|$)/;\n  block.html = edit(block.html, 'i').replace('comment', block._comment).replace('tag', block._tag).replace('attribute', / +[a-zA-Z:_][\\w.:-]*(?: *= *\"[^\"\\n]*\"| *= *'[^'\\n]*'| *= *[^\\s\"'=<>`]+)?/).getRegex();\n  block.paragraph = edit(block._paragraph).replace('hr', block.hr).replace('heading', ' {0,3}#{1,6} ').replace('|lheading', '') // setex headings don't interrupt commonmark paragraphs\n  .replace('|table', '').replace('blockquote', ' {0,3}>').replace('fences', ' {0,3}(?:`{3,}(?=[^`\\\\n]*\\\\n)|~{3,})[^\\\\n]*\\\\n').replace('list', ' {0,3}(?:[*+-]|1[.)]) ') // only lists starting from 1 can interrupt\n  .replace('html', '</?(?:tag)(?: +|\\\\n|/?>)|<(?:script|pre|style|textarea|!--)').replace('tag', block._tag) // pars can be interrupted by type (6) html blocks\n  .getRegex();\n  block.blockquote = edit(block.blockquote).replace('paragraph', block.paragraph).getRegex();\n  /**\n   * Normal Block Grammar\n   */\n\n  block.normal = merge({}, block);\n  /**\n   * GFM Block Grammar\n   */\n\n  block.gfm = merge({}, block.normal, {\n    table: '^ *([^\\\\n ].*\\\\|.*)\\\\n' // Header\n    + ' {0,3}(?:\\\\| *)?(:?-+:? *(?:\\\\| *:?-+:? *)*)(?:\\\\| *)?' // Align\n    + '(?:\\\\n((?:(?! *\\\\n|hr|heading|blockquote|code|fences|list|html).*(?:\\\\n|$))*)\\\\n*|$)' // Cells\n\n  });\n  block.gfm.table = edit(block.gfm.table).replace('hr', block.hr).replace('heading', ' {0,3}#{1,6} ').replace('blockquote', ' {0,3}>').replace('code', ' {4}[^\\\\n]').replace('fences', ' {0,3}(?:`{3,}(?=[^`\\\\n]*\\\\n)|~{3,})[^\\\\n]*\\\\n').replace('list', ' {0,3}(?:[*+-]|1[.)]) ') // only lists starting from 1 can interrupt\n  .replace('html', '</?(?:tag)(?: +|\\\\n|/?>)|<(?:script|pre|style|textarea|!--)').replace('tag', block._tag) // tables can be interrupted by type (6) html blocks\n  .getRegex();\n  block.gfm.paragraph = edit(block._paragraph).replace('hr', block.hr).replace('heading', ' {0,3}#{1,6} ').replace('|lheading', '') // setex headings don't interrupt commonmark paragraphs\n  .replace('table', block.gfm.table) // interrupt paragraphs with table\n  .replace('blockquote', ' {0,3}>').replace('fences', ' {0,3}(?:`{3,}(?=[^`\\\\n]*\\\\n)|~{3,})[^\\\\n]*\\\\n').replace('list', ' {0,3}(?:[*+-]|1[.)]) ') // only lists starting from 1 can interrupt\n  .replace('html', '</?(?:tag)(?: +|\\\\n|/?>)|<(?:script|pre|style|textarea|!--)').replace('tag', block._tag) // pars can be interrupted by type (6) html blocks\n  .getRegex();\n  /**\n   * Pedantic grammar (original John Gruber's loose markdown specification)\n   */\n\n  block.pedantic = merge({}, block.normal, {\n    html: edit('^ *(?:comment *(?:\\\\n|\\\\s*$)' + '|<(tag)[\\\\s\\\\S]+?</\\\\1> *(?:\\\\n{2,}|\\\\s*$)' // closed tag\n    + '|<tag(?:\"[^\"]*\"|\\'[^\\']*\\'|\\\\s[^\\'\"/>\\\\s]*)*?/?> *(?:\\\\n{2,}|\\\\s*$))').replace('comment', block._comment).replace(/tag/g, '(?!(?:' + 'a|em|strong|small|s|cite|q|dfn|abbr|data|time|code|var|samp|kbd|sub' + '|sup|i|b|u|mark|ruby|rt|rp|bdi|bdo|span|br|wbr|ins|del|img)' + '\\\\b)\\\\w+(?!:|[^\\\\w\\\\s@]*@)\\\\b').getRegex(),\n    def: /^ *\\[([^\\]]+)\\]: *<?([^\\s>]+)>?(?: +([\"(][^\\n]+[\")]))? *(?:\\n+|$)/,\n    heading: /^(#{1,6})(.*)(?:\\n+|$)/,\n    fences: noopTest,\n    // fences not supported\n    paragraph: edit(block.normal._paragraph).replace('hr', block.hr).replace('heading', ' *#{1,6} *[^\\n]').replace('lheading', block.lheading).replace('blockquote', ' {0,3}>').replace('|fences', '').replace('|list', '').replace('|html', '').getRegex()\n  });\n  /**\n   * Inline-Level Grammar\n   */\n\n  var inline = {\n    escape: /^\\\\([!\"#$%&'()*+,\\-./:;<=>?@\\[\\]\\\\^_`{|}~])/,\n    autolink: /^<(scheme:[^\\s\\x00-\\x1f<>]*|email)>/,\n    url: noopTest,\n    tag: '^comment' + '|^</[a-zA-Z][\\\\w:-]*\\\\s*>' // self-closing tag\n    + '|^<[a-zA-Z][\\\\w-]*(?:attribute)*?\\\\s*/?>' // open tag\n    + '|^<\\\\?[\\\\s\\\\S]*?\\\\?>' // processing instruction, e.g. <?php ?>\n    + '|^<![a-zA-Z]+\\\\s[\\\\s\\\\S]*?>' // declaration, e.g. <!DOCTYPE html>\n    + '|^<!\\\\[CDATA\\\\[[\\\\s\\\\S]*?\\\\]\\\\]>',\n    // CDATA section\n    link: /^!?\\[(label)\\]\\(\\s*(href)(?:\\s+(title))?\\s*\\)/,\n    reflink: /^!?\\[(label)\\]\\[(ref)\\]/,\n    nolink: /^!?\\[(ref)\\](?:\\[\\])?/,\n    reflinkSearch: 'reflink|nolink(?!\\\\()',\n    emStrong: {\n      lDelim: /^(?:\\*+(?:([punct_])|[^\\s*]))|^_+(?:([punct*])|([^\\s_]))/,\n      //        (1) and (2) can only be a Right Delimiter. (3) and (4) can only be Left.  (5) and (6) can be either Left or Right.\n      //          () Skip orphan inside strong  () Consume to delim (1) #***                (2) a***#, a***                   (3) #***a, ***a                 (4) ***#              (5) #***#                 (6) a***a\n      rDelimAst: /^[^_*]*?\\_\\_[^_*]*?\\*[^_*]*?(?=\\_\\_)|[^*]+(?=[^*])|[punct_](\\*+)(?=[\\s]|$)|[^punct*_\\s](\\*+)(?=[punct_\\s]|$)|[punct_\\s](\\*+)(?=[^punct*_\\s])|[\\s](\\*+)(?=[punct_])|[punct_](\\*+)(?=[punct_])|[^punct*_\\s](\\*+)(?=[^punct*_\\s])/,\n      rDelimUnd: /^[^_*]*?\\*\\*[^_*]*?\\_[^_*]*?(?=\\*\\*)|[^_]+(?=[^_])|[punct*](\\_+)(?=[\\s]|$)|[^punct*_\\s](\\_+)(?=[punct*\\s]|$)|[punct*\\s](\\_+)(?=[^punct*_\\s])|[\\s](\\_+)(?=[punct*])|[punct*](\\_+)(?=[punct*])/ // ^- Not allowed for _\n\n    },\n    code: /^(`+)([^`]|[^`][\\s\\S]*?[^`])\\1(?!`)/,\n    br: /^( {2,}|\\\\)\\n(?!\\s*$)/,\n    del: noopTest,\n    text: /^(`+|[^`])(?:(?= {2,}\\n)|[\\s\\S]*?(?:(?=[\\\\<!\\[`*_]|\\b_|$)|[^ ](?= {2,}\\n)))/,\n    punctuation: /^([\\spunctuation])/\n  }; // list of punctuation marks from CommonMark spec\n  // without * and _ to handle the different emphasis markers * and _\n\n  inline._punctuation = '!\"#$%&\\'()+\\\\-.,/:;<=>?@\\\\[\\\\]`^{|}~';\n  inline.punctuation = edit(inline.punctuation).replace(/punctuation/g, inline._punctuation).getRegex(); // sequences em should skip over [title](link), `code`, <html>\n\n  inline.blockSkip = /\\[[^\\]]*?\\]\\([^\\)]*?\\)|`[^`]*?`|<[^>]*?>/g;\n  inline.escapedEmSt = /\\\\\\*|\\\\_/g;\n  inline._comment = edit(block._comment).replace('(?:-->|$)', '-->').getRegex();\n  inline.emStrong.lDelim = edit(inline.emStrong.lDelim).replace(/punct/g, inline._punctuation).getRegex();\n  inline.emStrong.rDelimAst = edit(inline.emStrong.rDelimAst, 'g').replace(/punct/g, inline._punctuation).getRegex();\n  inline.emStrong.rDelimUnd = edit(inline.emStrong.rDelimUnd, 'g').replace(/punct/g, inline._punctuation).getRegex();\n  inline._escapes = /\\\\([!\"#$%&'()*+,\\-./:;<=>?@\\[\\]\\\\^_`{|}~])/g;\n  inline._scheme = /[a-zA-Z][a-zA-Z0-9+.-]{1,31}/;\n  inline._email = /[a-zA-Z0-9.!#$%&'*+/=?^_`{|}~-]+(@)[a-zA-Z0-9](?:[a-zA-Z0-9-]{0,61}[a-zA-Z0-9])?(?:\\.[a-zA-Z0-9](?:[a-zA-Z0-9-]{0,61}[a-zA-Z0-9])?)+(?![-_])/;\n  inline.autolink = edit(inline.autolink).replace('scheme', inline._scheme).replace('email', inline._email).getRegex();\n  inline._attribute = /\\s+[a-zA-Z:_][\\w.:-]*(?:\\s*=\\s*\"[^\"]*\"|\\s*=\\s*'[^']*'|\\s*=\\s*[^\\s\"'=<>`]+)?/;\n  inline.tag = edit(inline.tag).replace('comment', inline._comment).replace('attribute', inline._attribute).getRegex();\n  inline._label = /(?:\\[(?:\\\\.|[^\\[\\]\\\\])*\\]|\\\\.|`[^`]*`|[^\\[\\]\\\\`])*?/;\n  inline._href = /<(?:\\\\.|[^\\n<>\\\\])+>|[^\\s\\x00-\\x1f]*/;\n  inline._title = /\"(?:\\\\\"?|[^\"\\\\])*\"|'(?:\\\\'?|[^'\\\\])*'|\\((?:\\\\\\)?|[^)\\\\])*\\)/;\n  inline.link = edit(inline.link).replace('label', inline._label).replace('href', inline._href).replace('title', inline._title).getRegex();\n  inline.reflink = edit(inline.reflink).replace('label', inline._label).replace('ref', block._label).getRegex();\n  inline.nolink = edit(inline.nolink).replace('ref', block._label).getRegex();\n  inline.reflinkSearch = edit(inline.reflinkSearch, 'g').replace('reflink', inline.reflink).replace('nolink', inline.nolink).getRegex();\n  /**\n   * Normal Inline Grammar\n   */\n\n  inline.normal = merge({}, inline);\n  /**\n   * Pedantic Inline Grammar\n   */\n\n  inline.pedantic = merge({}, inline.normal, {\n    strong: {\n      start: /^__|\\*\\*/,\n      middle: /^__(?=\\S)([\\s\\S]*?\\S)__(?!_)|^\\*\\*(?=\\S)([\\s\\S]*?\\S)\\*\\*(?!\\*)/,\n      endAst: /\\*\\*(?!\\*)/g,\n      endUnd: /__(?!_)/g\n    },\n    em: {\n      start: /^_|\\*/,\n      middle: /^()\\*(?=\\S)([\\s\\S]*?\\S)\\*(?!\\*)|^_(?=\\S)([\\s\\S]*?\\S)_(?!_)/,\n      endAst: /\\*(?!\\*)/g,\n      endUnd: /_(?!_)/g\n    },\n    link: edit(/^!?\\[(label)\\]\\((.*?)\\)/).replace('label', inline._label).getRegex(),\n    reflink: edit(/^!?\\[(label)\\]\\s*\\[([^\\]]*)\\]/).replace('label', inline._label).getRegex()\n  });\n  /**\n   * GFM Inline Grammar\n   */\n\n  inline.gfm = merge({}, inline.normal, {\n    escape: edit(inline.escape).replace('])', '~|])').getRegex(),\n    _extended_email: /[A-Za-z0-9._+-]+(@)[a-zA-Z0-9-_]+(?:\\.[a-zA-Z0-9-_]*[a-zA-Z0-9])+(?![-_])/,\n    url: /^((?:ftp|https?):\\/\\/|www\\.)(?:[a-zA-Z0-9\\-]+\\.?)+[^\\s<]*|^email/,\n    _backpedal: /(?:[^?!.,:;*_~()&]+|\\([^)]*\\)|&(?![a-zA-Z0-9]+;$)|[?!.,:;*_~)]+(?!$))+/,\n    del: /^(~~?)(?=[^\\s~])([\\s\\S]*?[^\\s~])\\1(?=[^~]|$)/,\n    text: /^([`~]+|[^`~])(?:(?= {2,}\\n)|(?=[a-zA-Z0-9.!#$%&'*+\\/=?_`{\\|}~-]+@)|[\\s\\S]*?(?:(?=[\\\\<!\\[`*~_]|\\b_|https?:\\/\\/|ftp:\\/\\/|www\\.|$)|[^ ](?= {2,}\\n)|[^a-zA-Z0-9.!#$%&'*+\\/=?_`{\\|}~-](?=[a-zA-Z0-9.!#$%&'*+\\/=?_`{\\|}~-]+@)))/\n  });\n  inline.gfm.url = edit(inline.gfm.url, 'i').replace('email', inline.gfm._extended_email).getRegex();\n  /**\n   * GFM + Line Breaks Inline Grammar\n   */\n\n  inline.breaks = merge({}, inline.gfm, {\n    br: edit(inline.br).replace('{2,}', '*').getRegex(),\n    text: edit(inline.gfm.text).replace('\\\\b_', '\\\\b_| {2,}\\\\n').replace(/\\{2,\\}/g, '*').getRegex()\n  });\n\n  /**\n   * smartypants text replacement\n   * @param {string} text\n   */\n\n  function smartypants(text) {\n    return text // em-dashes\n    .replace(/---/g, \"\\u2014\") // en-dashes\n    .replace(/--/g, \"\\u2013\") // opening singles\n    .replace(/(^|[-\\u2014/(\\[{\"\\s])'/g, \"$1\\u2018\") // closing singles & apostrophes\n    .replace(/'/g, \"\\u2019\") // opening doubles\n    .replace(/(^|[-\\u2014/(\\[{\\u2018\\s])\"/g, \"$1\\u201C\") // closing doubles\n    .replace(/\"/g, \"\\u201D\") // ellipses\n    .replace(/\\.{3}/g, \"\\u2026\");\n  }\n  /**\n   * mangle email addresses\n   * @param {string} text\n   */\n\n\n  function mangle(text) {\n    var out = '',\n        i,\n        ch;\n    var l = text.length;\n\n    for (i = 0; i < l; i++) {\n      ch = text.charCodeAt(i);\n\n      if (Math.random() > 0.5) {\n        ch = 'x' + ch.toString(16);\n      }\n\n      out += '&#' + ch + ';';\n    }\n\n    return out;\n  }\n  /**\n   * Block Lexer\n   */\n\n\n  var Lexer = /*#__PURE__*/function () {\n    function Lexer(options) {\n      this.tokens = [];\n      this.tokens.links = Object.create(null);\n      this.options = options || exports.defaults;\n      this.options.tokenizer = this.options.tokenizer || new Tokenizer();\n      this.tokenizer = this.options.tokenizer;\n      this.tokenizer.options = this.options;\n      this.tokenizer.lexer = this;\n      this.inlineQueue = [];\n      this.state = {\n        inLink: false,\n        inRawBlock: false,\n        top: true\n      };\n      var rules = {\n        block: block.normal,\n        inline: inline.normal\n      };\n\n      if (this.options.pedantic) {\n        rules.block = block.pedantic;\n        rules.inline = inline.pedantic;\n      } else if (this.options.gfm) {\n        rules.block = block.gfm;\n\n        if (this.options.breaks) {\n          rules.inline = inline.breaks;\n        } else {\n          rules.inline = inline.gfm;\n        }\n      }\n\n      this.tokenizer.rules = rules;\n    }\n    /**\n     * Expose Rules\n     */\n\n\n    /**\n     * Static Lex Method\n     */\n    Lexer.lex = function lex(src, options) {\n      var lexer = new Lexer(options);\n      return lexer.lex(src);\n    }\n    /**\n     * Static Lex Inline Method\n     */\n    ;\n\n    Lexer.lexInline = function lexInline(src, options) {\n      var lexer = new Lexer(options);\n      return lexer.inlineTokens(src);\n    }\n    /**\n     * Preprocessing\n     */\n    ;\n\n    var _proto = Lexer.prototype;\n\n    _proto.lex = function lex(src) {\n      src = src.replace(/\\r\\n|\\r/g, '\\n');\n      this.blockTokens(src, this.tokens);\n      var next;\n\n      while (next = this.inlineQueue.shift()) {\n        this.inlineTokens(next.src, next.tokens);\n      }\n\n      return this.tokens;\n    }\n    /**\n     * Lexing\n     */\n    ;\n\n    _proto.blockTokens = function blockTokens(src, tokens) {\n      var _this = this;\n\n      if (tokens === void 0) {\n        tokens = [];\n      }\n\n      if (this.options.pedantic) {\n        src = src.replace(/\\t/g, '    ').replace(/^ +$/gm, '');\n      } else {\n        src = src.replace(/^( *)(\\t+)/gm, function (_, leading, tabs) {\n          return leading + '    '.repeat(tabs.length);\n        });\n      }\n\n      var token, lastToken, cutSrc, lastParagraphClipped;\n\n      while (src) {\n        if (this.options.extensions && this.options.extensions.block && this.options.extensions.block.some(function (extTokenizer) {\n          if (token = extTokenizer.call({\n            lexer: _this\n          }, src, tokens)) {\n            src = src.substring(token.raw.length);\n            tokens.push(token);\n            return true;\n          }\n\n          return false;\n        })) {\n          continue;\n        } // newline\n\n\n        if (token = this.tokenizer.space(src)) {\n          src = src.substring(token.raw.length);\n\n          if (token.raw.length === 1 && tokens.length > 0) {\n            // if there's a single \\n as a spacer, it's terminating the last line,\n            // so move it there so that we don't get unecessary paragraph tags\n            tokens[tokens.length - 1].raw += '\\n';\n          } else {\n            tokens.push(token);\n          }\n\n          continue;\n        } // code\n\n\n        if (token = this.tokenizer.code(src)) {\n          src = src.substring(token.raw.length);\n          lastToken = tokens[tokens.length - 1]; // An indented code block cannot interrupt a paragraph.\n\n          if (lastToken && (lastToken.type === 'paragraph' || lastToken.type === 'text')) {\n            lastToken.raw += '\\n' + token.raw;\n            lastToken.text += '\\n' + token.text;\n            this.inlineQueue[this.inlineQueue.length - 1].src = lastToken.text;\n          } else {\n            tokens.push(token);\n          }\n\n          continue;\n        } // fences\n\n\n        if (token = this.tokenizer.fences(src)) {\n          src = src.substring(token.raw.length);\n          tokens.push(token);\n          continue;\n        } // heading\n\n\n        if (token = this.tokenizer.heading(src)) {\n          src = src.substring(token.raw.length);\n          tokens.push(token);\n          continue;\n        } // hr\n\n\n        if (token = this.tokenizer.hr(src)) {\n          src = src.substring(token.raw.length);\n          tokens.push(token);\n          continue;\n        } // blockquote\n\n\n        if (token = this.tokenizer.blockquote(src)) {\n          src = src.substring(token.raw.length);\n          tokens.push(token);\n          continue;\n        } // list\n\n\n        if (token = this.tokenizer.list(src)) {\n          src = src.substring(token.raw.length);\n          tokens.push(token);\n          continue;\n        } // html\n\n\n        if (token = this.tokenizer.html(src)) {\n          src = src.substring(token.raw.length);\n          tokens.push(token);\n          continue;\n        } // def\n\n\n        if (token = this.tokenizer.def(src)) {\n          src = src.substring(token.raw.length);\n          lastToken = tokens[tokens.length - 1];\n\n          if (lastToken && (lastToken.type === 'paragraph' || lastToken.type === 'text')) {\n            lastToken.raw += '\\n' + token.raw;\n            lastToken.text += '\\n' + token.raw;\n            this.inlineQueue[this.inlineQueue.length - 1].src = lastToken.text;\n          } else if (!this.tokens.links[token.tag]) {\n            this.tokens.links[token.tag] = {\n              href: token.href,\n              title: token.title\n            };\n          }\n\n          continue;\n        } // table (gfm)\n\n\n        if (token = this.tokenizer.table(src)) {\n          src = src.substring(token.raw.length);\n          tokens.push(token);\n          continue;\n        } // lheading\n\n\n        if (token = this.tokenizer.lheading(src)) {\n          src = src.substring(token.raw.length);\n          tokens.push(token);\n          continue;\n        } // top-level paragraph\n        // prevent paragraph consuming extensions by clipping 'src' to extension start\n\n\n        cutSrc = src;\n\n        if (this.options.extensions && this.options.extensions.startBlock) {\n          (function () {\n            var startIndex = Infinity;\n            var tempSrc = src.slice(1);\n            var tempStart = void 0;\n\n            _this.options.extensions.startBlock.forEach(function (getStartIndex) {\n              tempStart = getStartIndex.call({\n                lexer: this\n              }, tempSrc);\n\n              if (typeof tempStart === 'number' && tempStart >= 0) {\n                startIndex = Math.min(startIndex, tempStart);\n              }\n            });\n\n            if (startIndex < Infinity && startIndex >= 0) {\n              cutSrc = src.substring(0, startIndex + 1);\n            }\n          })();\n        }\n\n        if (this.state.top && (token = this.tokenizer.paragraph(cutSrc))) {\n          lastToken = tokens[tokens.length - 1];\n\n          if (lastParagraphClipped && lastToken.type === 'paragraph') {\n            lastToken.raw += '\\n' + token.raw;\n            lastToken.text += '\\n' + token.text;\n            this.inlineQueue.pop();\n            this.inlineQueue[this.inlineQueue.length - 1].src = lastToken.text;\n          } else {\n            tokens.push(token);\n          }\n\n          lastParagraphClipped = cutSrc.length !== src.length;\n          src = src.substring(token.raw.length);\n          continue;\n        } // text\n\n\n        if (token = this.tokenizer.text(src)) {\n          src = src.substring(token.raw.length);\n          lastToken = tokens[tokens.length - 1];\n\n          if (lastToken && lastToken.type === 'text') {\n            lastToken.raw += '\\n' + token.raw;\n            lastToken.text += '\\n' + token.text;\n            this.inlineQueue.pop();\n            this.inlineQueue[this.inlineQueue.length - 1].src = lastToken.text;\n          } else {\n            tokens.push(token);\n          }\n\n          continue;\n        }\n\n        if (src) {\n          var errMsg = 'Infinite loop on byte: ' + src.charCodeAt(0);\n\n          if (this.options.silent) {\n            console.error(errMsg);\n            break;\n          } else {\n            throw new Error(errMsg);\n          }\n        }\n      }\n\n      this.state.top = true;\n      return tokens;\n    };\n\n    _proto.inline = function inline(src, tokens) {\n      if (tokens === void 0) {\n        tokens = [];\n      }\n\n      this.inlineQueue.push({\n        src: src,\n        tokens: tokens\n      });\n      return tokens;\n    }\n    /**\n     * Lexing/Compiling\n     */\n    ;\n\n    _proto.inlineTokens = function inlineTokens(src, tokens) {\n      var _this2 = this;\n\n      if (tokens === void 0) {\n        tokens = [];\n      }\n\n      var token, lastToken, cutSrc; // String with links masked to avoid interference with em and strong\n\n      var maskedSrc = src;\n      var match;\n      var keepPrevChar, prevChar; // Mask out reflinks\n\n      if (this.tokens.links) {\n        var links = Object.keys(this.tokens.links);\n\n        if (links.length > 0) {\n          while ((match = this.tokenizer.rules.inline.reflinkSearch.exec(maskedSrc)) != null) {\n            if (links.includes(match[0].slice(match[0].lastIndexOf('[') + 1, -1))) {\n              maskedSrc = maskedSrc.slice(0, match.index) + '[' + repeatString('a', match[0].length - 2) + ']' + maskedSrc.slice(this.tokenizer.rules.inline.reflinkSearch.lastIndex);\n            }\n          }\n        }\n      } // Mask out other blocks\n\n\n      while ((match = this.tokenizer.rules.inline.blockSkip.exec(maskedSrc)) != null) {\n        maskedSrc = maskedSrc.slice(0, match.index) + '[' + repeatString('a', match[0].length - 2) + ']' + maskedSrc.slice(this.tokenizer.rules.inline.blockSkip.lastIndex);\n      } // Mask out escaped em & strong delimiters\n\n\n      while ((match = this.tokenizer.rules.inline.escapedEmSt.exec(maskedSrc)) != null) {\n        maskedSrc = maskedSrc.slice(0, match.index) + '++' + maskedSrc.slice(this.tokenizer.rules.inline.escapedEmSt.lastIndex);\n      }\n\n      while (src) {\n        if (!keepPrevChar) {\n          prevChar = '';\n        }\n\n        keepPrevChar = false; // extensions\n\n        if (this.options.extensions && this.options.extensions.inline && this.options.extensions.inline.some(function (extTokenizer) {\n          if (token = extTokenizer.call({\n            lexer: _this2\n          }, src, tokens)) {\n            src = src.substring(token.raw.length);\n            tokens.push(token);\n            return true;\n          }\n\n          return false;\n        })) {\n          continue;\n        } // escape\n\n\n        if (token = this.tokenizer.escape(src)) {\n          src = src.substring(token.raw.length);\n          tokens.push(token);\n          continue;\n        } // tag\n\n\n        if (token = this.tokenizer.tag(src)) {\n          src = src.substring(token.raw.length);\n          lastToken = tokens[tokens.length - 1];\n\n          if (lastToken && token.type === 'text' && lastToken.type === 'text') {\n            lastToken.raw += token.raw;\n            lastToken.text += token.text;\n          } else {\n            tokens.push(token);\n          }\n\n          continue;\n        } // link\n\n\n        if (token = this.tokenizer.link(src)) {\n          src = src.substring(token.raw.length);\n          tokens.push(token);\n          continue;\n        } // reflink, nolink\n\n\n        if (token = this.tokenizer.reflink(src, this.tokens.links)) {\n          src = src.substring(token.raw.length);\n          lastToken = tokens[tokens.length - 1];\n\n          if (lastToken && token.type === 'text' && lastToken.type === 'text') {\n            lastToken.raw += token.raw;\n            lastToken.text += token.text;\n          } else {\n            tokens.push(token);\n          }\n\n          continue;\n        } // em & strong\n\n\n        if (token = this.tokenizer.emStrong(src, maskedSrc, prevChar)) {\n          src = src.substring(token.raw.length);\n          tokens.push(token);\n          continue;\n        } // code\n\n\n        if (token = this.tokenizer.codespan(src)) {\n          src = src.substring(token.raw.length);\n          tokens.push(token);\n          continue;\n        } // br\n\n\n        if (token = this.tokenizer.br(src)) {\n          src = src.substring(token.raw.length);\n          tokens.push(token);\n          continue;\n        } // del (gfm)\n\n\n        if (token = this.tokenizer.del(src)) {\n          src = src.substring(token.raw.length);\n          tokens.push(token);\n          continue;\n        } // autolink\n\n\n        if (token = this.tokenizer.autolink(src, mangle)) {\n          src = src.substring(token.raw.length);\n          tokens.push(token);\n          continue;\n        } // url (gfm)\n\n\n        if (!this.state.inLink && (token = this.tokenizer.url(src, mangle))) {\n          src = src.substring(token.raw.length);\n          tokens.push(token);\n          continue;\n        } // text\n        // prevent inlineText consuming extensions by clipping 'src' to extension start\n\n\n        cutSrc = src;\n\n        if (this.options.extensions && this.options.extensions.startInline) {\n          (function () {\n            var startIndex = Infinity;\n            var tempSrc = src.slice(1);\n            var tempStart = void 0;\n\n            _this2.options.extensions.startInline.forEach(function (getStartIndex) {\n              tempStart = getStartIndex.call({\n                lexer: this\n              }, tempSrc);\n\n              if (typeof tempStart === 'number' && tempStart >= 0) {\n                startIndex = Math.min(startIndex, tempStart);\n              }\n            });\n\n            if (startIndex < Infinity && startIndex >= 0) {\n              cutSrc = src.substring(0, startIndex + 1);\n            }\n          })();\n        }\n\n        if (token = this.tokenizer.inlineText(cutSrc, smartypants)) {\n          src = src.substring(token.raw.length);\n\n          if (token.raw.slice(-1) !== '_') {\n            // Track prevChar before string of ____ started\n            prevChar = token.raw.slice(-1);\n          }\n\n          keepPrevChar = true;\n          lastToken = tokens[tokens.length - 1];\n\n          if (lastToken && lastToken.type === 'text') {\n            lastToken.raw += token.raw;\n            lastToken.text += token.text;\n          } else {\n            tokens.push(token);\n          }\n\n          continue;\n        }\n\n        if (src) {\n          var errMsg = 'Infinite loop on byte: ' + src.charCodeAt(0);\n\n          if (this.options.silent) {\n            console.error(errMsg);\n            break;\n          } else {\n            throw new Error(errMsg);\n          }\n        }\n      }\n\n      return tokens;\n    };\n\n    _createClass(Lexer, null, [{\n      key: \"rules\",\n      get: function get() {\n        return {\n          block: block,\n          inline: inline\n        };\n      }\n    }]);\n\n    return Lexer;\n  }();\n\n  /**\n   * Renderer\n   */\n\n  var Renderer = /*#__PURE__*/function () {\n    function Renderer(options) {\n      this.options = options || exports.defaults;\n    }\n\n    var _proto = Renderer.prototype;\n\n    _proto.code = function code(_code, infostring, escaped) {\n      var lang = (infostring || '').match(/\\S*/)[0];\n\n      if (this.options.highlight) {\n        var out = this.options.highlight(_code, lang);\n\n        if (out != null && out !== _code) {\n          escaped = true;\n          _code = out;\n        }\n      }\n\n      _code = _code.replace(/\\n$/, '') + '\\n';\n\n      if (!lang) {\n        return '<pre><code>' + (escaped ? _code : escape(_code, true)) + '</code></pre>\\n';\n      }\n\n      return '<pre><code class=\"' + this.options.langPrefix + escape(lang, true) + '\">' + (escaped ? _code : escape(_code, true)) + '</code></pre>\\n';\n    }\n    /**\n     * @param {string} quote\n     */\n    ;\n\n    _proto.blockquote = function blockquote(quote) {\n      return \"<blockquote>\\n\" + quote + \"</blockquote>\\n\";\n    };\n\n    _proto.html = function html(_html) {\n      return _html;\n    }\n    /**\n     * @param {string} text\n     * @param {string} level\n     * @param {string} raw\n     * @param {any} slugger\n     */\n    ;\n\n    _proto.heading = function heading(text, level, raw, slugger) {\n      if (this.options.headerIds) {\n        var id = this.options.headerPrefix + slugger.slug(raw);\n        return \"<h\" + level + \" id=\\\"\" + id + \"\\\">\" + text + \"</h\" + level + \">\\n\";\n      } // ignore IDs\n\n\n      return \"<h\" + level + \">\" + text + \"</h\" + level + \">\\n\";\n    };\n\n    _proto.hr = function hr() {\n      return this.options.xhtml ? '<hr/>\\n' : '<hr>\\n';\n    };\n\n    _proto.list = function list(body, ordered, start) {\n      var type = ordered ? 'ol' : 'ul',\n          startatt = ordered && start !== 1 ? ' start=\"' + start + '\"' : '';\n      return '<' + type + startatt + '>\\n' + body + '</' + type + '>\\n';\n    }\n    /**\n     * @param {string} text\n     */\n    ;\n\n    _proto.listitem = function listitem(text) {\n      return \"<li>\" + text + \"</li>\\n\";\n    };\n\n    _proto.checkbox = function checkbox(checked) {\n      return '<input ' + (checked ? 'checked=\"\" ' : '') + 'disabled=\"\" type=\"checkbox\"' + (this.options.xhtml ? ' /' : '') + '> ';\n    }\n    /**\n     * @param {string} text\n     */\n    ;\n\n    _proto.paragraph = function paragraph(text) {\n      return \"<p>\" + text + \"</p>\\n\";\n    }\n    /**\n     * @param {string} header\n     * @param {string} body\n     */\n    ;\n\n    _proto.table = function table(header, body) {\n      if (body) body = \"<tbody>\" + body + \"</tbody>\";\n      return '<table>\\n' + '<thead>\\n' + header + '</thead>\\n' + body + '</table>\\n';\n    }\n    /**\n     * @param {string} content\n     */\n    ;\n\n    _proto.tablerow = function tablerow(content) {\n      return \"<tr>\\n\" + content + \"</tr>\\n\";\n    };\n\n    _proto.tablecell = function tablecell(content, flags) {\n      var type = flags.header ? 'th' : 'td';\n      var tag = flags.align ? \"<\" + type + \" align=\\\"\" + flags.align + \"\\\">\" : \"<\" + type + \">\";\n      return tag + content + (\"</\" + type + \">\\n\");\n    }\n    /**\n     * span level renderer\n     * @param {string} text\n     */\n    ;\n\n    _proto.strong = function strong(text) {\n      return \"<strong>\" + text + \"</strong>\";\n    }\n    /**\n     * @param {string} text\n     */\n    ;\n\n    _proto.em = function em(text) {\n      return \"<em>\" + text + \"</em>\";\n    }\n    /**\n     * @param {string} text\n     */\n    ;\n\n    _proto.codespan = function codespan(text) {\n      return \"<code>\" + text + \"</code>\";\n    };\n\n    _proto.br = function br() {\n      return this.options.xhtml ? '<br/>' : '<br>';\n    }\n    /**\n     * @param {string} text\n     */\n    ;\n\n    _proto.del = function del(text) {\n      return \"<del>\" + text + \"</del>\";\n    }\n    /**\n     * @param {string} href\n     * @param {string} title\n     * @param {string} text\n     */\n    ;\n\n    _proto.link = function link(href, title, text) {\n      href = cleanUrl(this.options.sanitize, this.options.baseUrl, href);\n\n      if (href === null) {\n        return text;\n      }\n\n      var out = '<a href=\"' + escape(href) + '\"';\n\n      if (title) {\n        out += ' title=\"' + title + '\"';\n      }\n\n      out += '>' + text + '</a>';\n      return out;\n    }\n    /**\n     * @param {string} href\n     * @param {string} title\n     * @param {string} text\n     */\n    ;\n\n    _proto.image = function image(href, title, text) {\n      href = cleanUrl(this.options.sanitize, this.options.baseUrl, href);\n\n      if (href === null) {\n        return text;\n      }\n\n      var out = \"<img src=\\\"\" + href + \"\\\" alt=\\\"\" + text + \"\\\"\";\n\n      if (title) {\n        out += \" title=\\\"\" + title + \"\\\"\";\n      }\n\n      out += this.options.xhtml ? '/>' : '>';\n      return out;\n    };\n\n    _proto.text = function text(_text) {\n      return _text;\n    };\n\n    return Renderer;\n  }();\n\n  /**\n   * TextRenderer\n   * returns only the textual part of the token\n   */\n  var TextRenderer = /*#__PURE__*/function () {\n    function TextRenderer() {}\n\n    var _proto = TextRenderer.prototype;\n\n    // no need for block level renderers\n    _proto.strong = function strong(text) {\n      return text;\n    };\n\n    _proto.em = function em(text) {\n      return text;\n    };\n\n    _proto.codespan = function codespan(text) {\n      return text;\n    };\n\n    _proto.del = function del(text) {\n      return text;\n    };\n\n    _proto.html = function html(text) {\n      return text;\n    };\n\n    _proto.text = function text(_text) {\n      return _text;\n    };\n\n    _proto.link = function link(href, title, text) {\n      return '' + text;\n    };\n\n    _proto.image = function image(href, title, text) {\n      return '' + text;\n    };\n\n    _proto.br = function br() {\n      return '';\n    };\n\n    return TextRenderer;\n  }();\n\n  /**\n   * Slugger generates header id\n   */\n  var Slugger = /*#__PURE__*/function () {\n    function Slugger() {\n      this.seen = {};\n    }\n    /**\n     * @param {string} value\n     */\n\n\n    var _proto = Slugger.prototype;\n\n    _proto.serialize = function serialize(value) {\n      return value.toLowerCase().trim() // remove html tags\n      .replace(/<[!\\/a-z].*?>/ig, '') // remove unwanted chars\n      .replace(/[\\u2000-\\u206F\\u2E00-\\u2E7F\\\\'!\"#$%&()*+,./:;<=>?@[\\]^`{|}~]/g, '').replace(/\\s/g, '-');\n    }\n    /**\n     * Finds the next safe (unique) slug to use\n     * @param {string} originalSlug\n     * @param {boolean} isDryRun\n     */\n    ;\n\n    _proto.getNextSafeSlug = function getNextSafeSlug(originalSlug, isDryRun) {\n      var slug = originalSlug;\n      var occurenceAccumulator = 0;\n\n      if (this.seen.hasOwnProperty(slug)) {\n        occurenceAccumulator = this.seen[originalSlug];\n\n        do {\n          occurenceAccumulator++;\n          slug = originalSlug + '-' + occurenceAccumulator;\n        } while (this.seen.hasOwnProperty(slug));\n      }\n\n      if (!isDryRun) {\n        this.seen[originalSlug] = occurenceAccumulator;\n        this.seen[slug] = 0;\n      }\n\n      return slug;\n    }\n    /**\n     * Convert string to unique id\n     * @param {object} [options]\n     * @param {boolean} [options.dryrun] Generates the next unique slug without\n     * updating the internal accumulator.\n     */\n    ;\n\n    _proto.slug = function slug(value, options) {\n      if (options === void 0) {\n        options = {};\n      }\n\n      var slug = this.serialize(value);\n      return this.getNextSafeSlug(slug, options.dryrun);\n    };\n\n    return Slugger;\n  }();\n\n  /**\n   * Parsing & Compiling\n   */\n\n  var Parser = /*#__PURE__*/function () {\n    function Parser(options) {\n      this.options = options || exports.defaults;\n      this.options.renderer = this.options.renderer || new Renderer();\n      this.renderer = this.options.renderer;\n      this.renderer.options = this.options;\n      this.textRenderer = new TextRenderer();\n      this.slugger = new Slugger();\n    }\n    /**\n     * Static Parse Method\n     */\n\n\n    Parser.parse = function parse(tokens, options) {\n      var parser = new Parser(options);\n      return parser.parse(tokens);\n    }\n    /**\n     * Static Parse Inline Method\n     */\n    ;\n\n    Parser.parseInline = function parseInline(tokens, options) {\n      var parser = new Parser(options);\n      return parser.parseInline(tokens);\n    }\n    /**\n     * Parse Loop\n     */\n    ;\n\n    var _proto = Parser.prototype;\n\n    _proto.parse = function parse(tokens, top) {\n      if (top === void 0) {\n        top = true;\n      }\n\n      var out = '',\n          i,\n          j,\n          k,\n          l2,\n          l3,\n          row,\n          cell,\n          header,\n          body,\n          token,\n          ordered,\n          start,\n          loose,\n          itemBody,\n          item,\n          checked,\n          task,\n          checkbox,\n          ret;\n      var l = tokens.length;\n\n      for (i = 0; i < l; i++) {\n        token = tokens[i]; // Run any renderer extensions\n\n        if (this.options.extensions && this.options.extensions.renderers && this.options.extensions.renderers[token.type]) {\n          ret = this.options.extensions.renderers[token.type].call({\n            parser: this\n          }, token);\n\n          if (ret !== false || !['space', 'hr', 'heading', 'code', 'table', 'blockquote', 'list', 'html', 'paragraph', 'text'].includes(token.type)) {\n            out += ret || '';\n            continue;\n          }\n        }\n\n        switch (token.type) {\n          case 'space':\n            {\n              continue;\n            }\n\n          case 'hr':\n            {\n              out += this.renderer.hr();\n              continue;\n            }\n\n          case 'heading':\n            {\n              out += this.renderer.heading(this.parseInline(token.tokens), token.depth, unescape(this.parseInline(token.tokens, this.textRenderer)), this.slugger);\n              continue;\n            }\n\n          case 'code':\n            {\n              out += this.renderer.code(token.text, token.lang, token.escaped);\n              continue;\n            }\n\n          case 'table':\n            {\n              header = ''; // header\n\n              cell = '';\n              l2 = token.header.length;\n\n              for (j = 0; j < l2; j++) {\n                cell += this.renderer.tablecell(this.parseInline(token.header[j].tokens), {\n                  header: true,\n                  align: token.align[j]\n                });\n              }\n\n              header += this.renderer.tablerow(cell);\n              body = '';\n              l2 = token.rows.length;\n\n              for (j = 0; j < l2; j++) {\n                row = token.rows[j];\n                cell = '';\n                l3 = row.length;\n\n                for (k = 0; k < l3; k++) {\n                  cell += this.renderer.tablecell(this.parseInline(row[k].tokens), {\n                    header: false,\n                    align: token.align[k]\n                  });\n                }\n\n                body += this.renderer.tablerow(cell);\n              }\n\n              out += this.renderer.table(header, body);\n              continue;\n            }\n\n          case 'blockquote':\n            {\n              body = this.parse(token.tokens);\n              out += this.renderer.blockquote(body);\n              continue;\n            }\n\n          case 'list':\n            {\n              ordered = token.ordered;\n              start = token.start;\n              loose = token.loose;\n              l2 = token.items.length;\n              body = '';\n\n              for (j = 0; j < l2; j++) {\n                item = token.items[j];\n                checked = item.checked;\n                task = item.task;\n                itemBody = '';\n\n                if (item.task) {\n                  checkbox = this.renderer.checkbox(checked);\n\n                  if (loose) {\n                    if (item.tokens.length > 0 && item.tokens[0].type === 'paragraph') {\n                      item.tokens[0].text = checkbox + ' ' + item.tokens[0].text;\n\n                      if (item.tokens[0].tokens && item.tokens[0].tokens.length > 0 && item.tokens[0].tokens[0].type === 'text') {\n                        item.tokens[0].tokens[0].text = checkbox + ' ' + item.tokens[0].tokens[0].text;\n                      }\n                    } else {\n                      item.tokens.unshift({\n                        type: 'text',\n                        text: checkbox\n                      });\n                    }\n                  } else {\n                    itemBody += checkbox;\n                  }\n                }\n\n                itemBody += this.parse(item.tokens, loose);\n                body += this.renderer.listitem(itemBody, task, checked);\n              }\n\n              out += this.renderer.list(body, ordered, start);\n              continue;\n            }\n\n          case 'html':\n            {\n              // TODO parse inline content if parameter markdown=1\n              out += this.renderer.html(token.text);\n              continue;\n            }\n\n          case 'paragraph':\n            {\n              out += this.renderer.paragraph(this.parseInline(token.tokens));\n              continue;\n            }\n\n          case 'text':\n            {\n              body = token.tokens ? this.parseInline(token.tokens) : token.text;\n\n              while (i + 1 < l && tokens[i + 1].type === 'text') {\n                token = tokens[++i];\n                body += '\\n' + (token.tokens ? this.parseInline(token.tokens) : token.text);\n              }\n\n              out += top ? this.renderer.paragraph(body) : body;\n              continue;\n            }\n\n          default:\n            {\n              var errMsg = 'Token with \"' + token.type + '\" type was not found.';\n\n              if (this.options.silent) {\n                console.error(errMsg);\n                return;\n              } else {\n                throw new Error(errMsg);\n              }\n            }\n        }\n      }\n\n      return out;\n    }\n    /**\n     * Parse Inline Tokens\n     */\n    ;\n\n    _proto.parseInline = function parseInline(tokens, renderer) {\n      renderer = renderer || this.renderer;\n      var out = '',\n          i,\n          token,\n          ret;\n      var l = tokens.length;\n\n      for (i = 0; i < l; i++) {\n        token = tokens[i]; // Run any renderer extensions\n\n        if (this.options.extensions && this.options.extensions.renderers && this.options.extensions.renderers[token.type]) {\n          ret = this.options.extensions.renderers[token.type].call({\n            parser: this\n          }, token);\n\n          if (ret !== false || !['escape', 'html', 'link', 'image', 'strong', 'em', 'codespan', 'br', 'del', 'text'].includes(token.type)) {\n            out += ret || '';\n            continue;\n          }\n        }\n\n        switch (token.type) {\n          case 'escape':\n            {\n              out += renderer.text(token.text);\n              break;\n            }\n\n          case 'html':\n            {\n              out += renderer.html(token.text);\n              break;\n            }\n\n          case 'link':\n            {\n              out += renderer.link(token.href, token.title, this.parseInline(token.tokens, renderer));\n              break;\n            }\n\n          case 'image':\n            {\n              out += renderer.image(token.href, token.title, token.text);\n              break;\n            }\n\n          case 'strong':\n            {\n              out += renderer.strong(this.parseInline(token.tokens, renderer));\n              break;\n            }\n\n          case 'em':\n            {\n              out += renderer.em(this.parseInline(token.tokens, renderer));\n              break;\n            }\n\n          case 'codespan':\n            {\n              out += renderer.codespan(token.text);\n              break;\n            }\n\n          case 'br':\n            {\n              out += renderer.br();\n              break;\n            }\n\n          case 'del':\n            {\n              out += renderer.del(this.parseInline(token.tokens, renderer));\n              break;\n            }\n\n          case 'text':\n            {\n              out += renderer.text(token.text);\n              break;\n            }\n\n          default:\n            {\n              var errMsg = 'Token with \"' + token.type + '\" type was not found.';\n\n              if (this.options.silent) {\n                console.error(errMsg);\n                return;\n              } else {\n                throw new Error(errMsg);\n              }\n            }\n        }\n      }\n\n      return out;\n    };\n\n    return Parser;\n  }();\n\n  /**\n   * Marked\n   */\n\n  function marked(src, opt, callback) {\n    // throw error in case of non string input\n    if (typeof src === 'undefined' || src === null) {\n      throw new Error('marked(): input parameter is undefined or null');\n    }\n\n    if (typeof src !== 'string') {\n      throw new Error('marked(): input parameter is of type ' + Object.prototype.toString.call(src) + ', string expected');\n    }\n\n    if (typeof opt === 'function') {\n      callback = opt;\n      opt = null;\n    }\n\n    opt = merge({}, marked.defaults, opt || {});\n    checkSanitizeDeprecation(opt);\n\n    if (callback) {\n      var highlight = opt.highlight;\n      var tokens;\n\n      try {\n        tokens = Lexer.lex(src, opt);\n      } catch (e) {\n        return callback(e);\n      }\n\n      var done = function done(err) {\n        var out;\n\n        if (!err) {\n          try {\n            if (opt.walkTokens) {\n              marked.walkTokens(tokens, opt.walkTokens);\n            }\n\n            out = Parser.parse(tokens, opt);\n          } catch (e) {\n            err = e;\n          }\n        }\n\n        opt.highlight = highlight;\n        return err ? callback(err) : callback(null, out);\n      };\n\n      if (!highlight || highlight.length < 3) {\n        return done();\n      }\n\n      delete opt.highlight;\n      if (!tokens.length) return done();\n      var pending = 0;\n      marked.walkTokens(tokens, function (token) {\n        if (token.type === 'code') {\n          pending++;\n          setTimeout(function () {\n            highlight(token.text, token.lang, function (err, code) {\n              if (err) {\n                return done(err);\n              }\n\n              if (code != null && code !== token.text) {\n                token.text = code;\n                token.escaped = true;\n              }\n\n              pending--;\n\n              if (pending === 0) {\n                done();\n              }\n            });\n          }, 0);\n        }\n      });\n\n      if (pending === 0) {\n        done();\n      }\n\n      return;\n    }\n\n    function onError(e) {\n      e.message += '\\nPlease report this to https://github.com/markedjs/marked.';\n\n      if (opt.silent) {\n        return '<p>An error occurred:</p><pre>' + escape(e.message + '', true) + '</pre>';\n      }\n\n      throw e;\n    }\n\n    try {\n      var _tokens = Lexer.lex(src, opt);\n\n      if (opt.walkTokens) {\n        if (opt.async) {\n          return Promise.all(marked.walkTokens(_tokens, opt.walkTokens)).then(function () {\n            return Parser.parse(_tokens, opt);\n          })[\"catch\"](onError);\n        }\n\n        marked.walkTokens(_tokens, opt.walkTokens);\n      }\n\n      return Parser.parse(_tokens, opt);\n    } catch (e) {\n      onError(e);\n    }\n  }\n  /**\n   * Options\n   */\n\n  marked.options = marked.setOptions = function (opt) {\n    merge(marked.defaults, opt);\n    changeDefaults(marked.defaults);\n    return marked;\n  };\n\n  marked.getDefaults = getDefaults;\n  marked.defaults = exports.defaults;\n  /**\n   * Use Extension\n   */\n\n  marked.use = function () {\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    var opts = merge.apply(void 0, [{}].concat(args));\n    var extensions = marked.defaults.extensions || {\n      renderers: {},\n      childTokens: {}\n    };\n    var hasExtensions;\n    args.forEach(function (pack) {\n      // ==-- Parse \"addon\" extensions --== //\n      if (pack.extensions) {\n        hasExtensions = true;\n        pack.extensions.forEach(function (ext) {\n          if (!ext.name) {\n            throw new Error('extension name required');\n          }\n\n          if (ext.renderer) {\n            // Renderer extensions\n            var prevRenderer = extensions.renderers ? extensions.renderers[ext.name] : null;\n\n            if (prevRenderer) {\n              // Replace extension with func to run new extension but fall back if false\n              extensions.renderers[ext.name] = function () {\n                for (var _len2 = arguments.length, args = new Array(_len2), _key2 = 0; _key2 < _len2; _key2++) {\n                  args[_key2] = arguments[_key2];\n                }\n\n                var ret = ext.renderer.apply(this, args);\n\n                if (ret === false) {\n                  ret = prevRenderer.apply(this, args);\n                }\n\n                return ret;\n              };\n            } else {\n              extensions.renderers[ext.name] = ext.renderer;\n            }\n          }\n\n          if (ext.tokenizer) {\n            // Tokenizer Extensions\n            if (!ext.level || ext.level !== 'block' && ext.level !== 'inline') {\n              throw new Error(\"extension level must be 'block' or 'inline'\");\n            }\n\n            if (extensions[ext.level]) {\n              extensions[ext.level].unshift(ext.tokenizer);\n            } else {\n              extensions[ext.level] = [ext.tokenizer];\n            }\n\n            if (ext.start) {\n              // Function to check for start of token\n              if (ext.level === 'block') {\n                if (extensions.startBlock) {\n                  extensions.startBlock.push(ext.start);\n                } else {\n                  extensions.startBlock = [ext.start];\n                }\n              } else if (ext.level === 'inline') {\n                if (extensions.startInline) {\n                  extensions.startInline.push(ext.start);\n                } else {\n                  extensions.startInline = [ext.start];\n                }\n              }\n            }\n          }\n\n          if (ext.childTokens) {\n            // Child tokens to be visited by walkTokens\n            extensions.childTokens[ext.name] = ext.childTokens;\n          }\n        });\n      } // ==-- Parse \"overwrite\" extensions --== //\n\n\n      if (pack.renderer) {\n        (function () {\n          var renderer = marked.defaults.renderer || new Renderer();\n\n          var _loop = function _loop(prop) {\n            var prevRenderer = renderer[prop]; // Replace renderer with func to run extension, but fall back if false\n\n            renderer[prop] = function () {\n              for (var _len3 = arguments.length, args = new Array(_len3), _key3 = 0; _key3 < _len3; _key3++) {\n                args[_key3] = arguments[_key3];\n              }\n\n              var ret = pack.renderer[prop].apply(renderer, args);\n\n              if (ret === false) {\n                ret = prevRenderer.apply(renderer, args);\n              }\n\n              return ret;\n            };\n          };\n\n          for (var prop in pack.renderer) {\n            _loop(prop);\n          }\n\n          opts.renderer = renderer;\n        })();\n      }\n\n      if (pack.tokenizer) {\n        (function () {\n          var tokenizer = marked.defaults.tokenizer || new Tokenizer();\n\n          var _loop2 = function _loop2(prop) {\n            var prevTokenizer = tokenizer[prop]; // Replace tokenizer with func to run extension, but fall back if false\n\n            tokenizer[prop] = function () {\n              for (var _len4 = arguments.length, args = new Array(_len4), _key4 = 0; _key4 < _len4; _key4++) {\n                args[_key4] = arguments[_key4];\n              }\n\n              var ret = pack.tokenizer[prop].apply(tokenizer, args);\n\n              if (ret === false) {\n                ret = prevTokenizer.apply(tokenizer, args);\n              }\n\n              return ret;\n            };\n          };\n\n          for (var prop in pack.tokenizer) {\n            _loop2(prop);\n          }\n\n          opts.tokenizer = tokenizer;\n        })();\n      } // ==-- Parse WalkTokens extensions --== //\n\n\n      if (pack.walkTokens) {\n        var _walkTokens = marked.defaults.walkTokens;\n\n        opts.walkTokens = function (token) {\n          var values = [];\n          values.push(pack.walkTokens.call(this, token));\n\n          if (_walkTokens) {\n            values = values.concat(_walkTokens.call(this, token));\n          }\n\n          return values;\n        };\n      }\n\n      if (hasExtensions) {\n        opts.extensions = extensions;\n      }\n\n      marked.setOptions(opts);\n    });\n  };\n  /**\n   * Run callback for every token\n   */\n\n\n  marked.walkTokens = function (tokens, callback) {\n    var values = [];\n\n    var _loop3 = function _loop3() {\n      var token = _step.value;\n      values = values.concat(callback.call(marked, token));\n\n      switch (token.type) {\n        case 'table':\n          {\n            for (var _iterator2 = _createForOfIteratorHelperLoose(token.header), _step2; !(_step2 = _iterator2()).done;) {\n              var cell = _step2.value;\n              values = values.concat(marked.walkTokens(cell.tokens, callback));\n            }\n\n            for (var _iterator3 = _createForOfIteratorHelperLoose(token.rows), _step3; !(_step3 = _iterator3()).done;) {\n              var row = _step3.value;\n\n              for (var _iterator4 = _createForOfIteratorHelperLoose(row), _step4; !(_step4 = _iterator4()).done;) {\n                var _cell = _step4.value;\n                values = values.concat(marked.walkTokens(_cell.tokens, callback));\n              }\n            }\n\n            break;\n          }\n\n        case 'list':\n          {\n            values = values.concat(marked.walkTokens(token.items, callback));\n            break;\n          }\n\n        default:\n          {\n            if (marked.defaults.extensions && marked.defaults.extensions.childTokens && marked.defaults.extensions.childTokens[token.type]) {\n              // Walk any extensions\n              marked.defaults.extensions.childTokens[token.type].forEach(function (childTokens) {\n                values = values.concat(marked.walkTokens(token[childTokens], callback));\n              });\n            } else if (token.tokens) {\n              values = values.concat(marked.walkTokens(token.tokens, callback));\n            }\n          }\n      }\n    };\n\n    for (var _iterator = _createForOfIteratorHelperLoose(tokens), _step; !(_step = _iterator()).done;) {\n      _loop3();\n    }\n\n    return values;\n  };\n  /**\n   * Parse Inline\n   * @param {string} src\n   */\n\n\n  marked.parseInline = function (src, opt) {\n    // throw error in case of non string input\n    if (typeof src === 'undefined' || src === null) {\n      throw new Error('marked.parseInline(): input parameter is undefined or null');\n    }\n\n    if (typeof src !== 'string') {\n      throw new Error('marked.parseInline(): input parameter is of type ' + Object.prototype.toString.call(src) + ', string expected');\n    }\n\n    opt = merge({}, marked.defaults, opt || {});\n    checkSanitizeDeprecation(opt);\n\n    try {\n      var tokens = Lexer.lexInline(src, opt);\n\n      if (opt.walkTokens) {\n        marked.walkTokens(tokens, opt.walkTokens);\n      }\n\n      return Parser.parseInline(tokens, opt);\n    } catch (e) {\n      e.message += '\\nPlease report this to https://github.com/markedjs/marked.';\n\n      if (opt.silent) {\n        return '<p>An error occurred:</p><pre>' + escape(e.message + '', true) + '</pre>';\n      }\n\n      throw e;\n    }\n  };\n  /**\n   * Expose\n   */\n\n\n  marked.Parser = Parser;\n  marked.parser = Parser.parse;\n  marked.Renderer = Renderer;\n  marked.TextRenderer = TextRenderer;\n  marked.Lexer = Lexer;\n  marked.lexer = Lexer.lex;\n  marked.Tokenizer = Tokenizer;\n  marked.Slugger = Slugger;\n  marked.parse = marked;\n  var options = marked.options;\n  var setOptions = marked.setOptions;\n  var use = marked.use;\n  var walkTokens = marked.walkTokens;\n  var parseInline = marked.parseInline;\n  var parse = marked;\n  var parser = Parser.parse;\n  var lexer = Lexer.lex;\n\n  exports.Lexer = Lexer;\n  exports.Parser = Parser;\n  exports.Renderer = Renderer;\n  exports.Slugger = Slugger;\n  exports.TextRenderer = TextRenderer;\n  exports.Tokenizer = Tokenizer;\n  exports.getDefaults = getDefaults;\n  exports.lexer = lexer;\n  exports.marked = marked;\n  exports.options = options;\n  exports.parse = parse;\n  exports.parseInline = parseInline;\n  exports.parser = parser;\n  exports.setOptions = setOptions;\n  exports.use = use;\n  exports.walkTokens = walkTokens;\n\n  Object.defineProperty(exports, '__esModule', { value: true });\n\n}));\n"],"mappings":"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"}