{"version":3,"names":["productCountCss","ProductCount","exports","class_1","prototype","componentDidLoad","this","input","root","querySelector","CountChangeHandler","countChange","emit","parseInt","value","ClampLength","length","substr","ClampValue","product","get","toString","Increment","Decrement","Target","e","func","target","render","_this","h","type","min","max","onInput","onChange","class","onClick"],"sources":["src/components/product/info/product-count.css?tag=ks-product-count","src/components/product/info/product-count.tsx"],"sourcesContent":["ks-product-count {\n    display: flex;\n    max-width: 80px;\n    margin-right: 8px;\n\n    overflow: hidden;\n\n    border-style: solid;\n    border-radius: 50px;\n    border-width: 1px;\n    border-color: #cacaca;\n    background-color: var(--product-price-count-color);\n}\n\nks-product-count input {\n    outline-style: none;\n    border-style: none;\n    background-color: transparent;\n\n    width: 52px;\n    height: 100%;\n    box-sizing: border-box;\n    padding: 10px 8px 10px 13px;\n\n    font-family: var(--product-price-count-font);\n    font-size: var(--product-price-size-small);\n    line-height: var(--product-price-size-small);\n\n    text-align: center;\n    vertical-align: middle;\n}\n\nks-product-count input::-webkit-inner-spin-button, \nks-product-count input::-webkit-outer-spin-button { \n    -webkit-appearance: none; \n    margin: 0; \n}\n\nks-product-count input[type=number] {\n    -moz-appearance:textfield;\n}\n\nks-product-count .spinner {\n    width: auto;\n    display: flex;\n    flex-flow: column nowrap;\n}\n\nks-product-count .spinner button {\n    outline-style: none;\n    border-style: none;\n    line-height: 0;\n    height: 100%;\n    margin: 0;\n    width: 28px;\n    box-sizing: border-box;\n\n    background-color: #e4e4e4;\n    transition: var(--transition-background-color);\n    border-left: solid 1px #cacaca\n}\n\nks-product-count .spinner button:first-child {\n    padding: 8px 8px 3px 3px;\n    border-bottom: solid 1px #cacaca\n}\n\nks-product-count .spinner button:last-child {\n    padding: 3px 8px 8px 3px;\n}\n\nks-product-count .spinner button:hover {\n    background-color: #cecece;\n}\n\nks-product-count .spinner button:active {\n    background-color: #a7a7a7;\n}\n\n\n@media (hover: none) {\n    ks-product-count {\n        max-width: 70px;\n    }\n\n    ks-product-count input {\n        padding: 10px;\n    }\n\n    ks-product-count .spinner {\n        display: none;\n    }\n}","import { Component, h, Element, Event, EventEmitter } from '@stencil/core';\nimport { product } from \"../../../global/data/product\";\n\n@Component({\n\ttag: 'ks-product-count',\n\tstyleUrl: 'product-count.css'\n})\nexport class ProductCount {\n    @Element() root: HTMLElement;\n\n    input: HTMLInputElement;\n    componentDidLoad() {\n        this.input = this.root.querySelector(\"input\");\n    }\n    \n    @Event() countChange: EventEmitter<number>;\n    CountChangeHandler() {\n        this.countChange.emit(parseInt(this.input.value));\n    }\n\n    ClampLength() {\n        if(this.input.value.length > 3)\n            this.input.value = this.input.value.substr(0, 3);\n    }\n\n    ClampValue() {\n        if(parseInt(this.input.value) > product.get(\"availability\")) {\n            this.input.value = product.get(\"availability\").toString();\n        }\n\n        if(parseInt(this.input.value) < 1) {\n            this.input.value = \"1\";\n        }\n    }\n\n    Increment() {\n        const value = parseInt(this.input.value) + 1;\n        if(value <= product.get(\"availability\")) {\n            this.input.value = value.toString();\n            this.CountChangeHandler();\n        }\n    }\n\n    Decrement() {\n        const value = parseInt(this.input.value) - 1;\n        if(value >= 1) {\n            this.input.value = value.toString();\n            this.CountChangeHandler();\n        }\n    }\n\n    Target(e: Event, func: (input: HTMLInputElement)=>void) {\n        func(e.target as HTMLInputElement);\n    }\n\n\trender() {\n\t\treturn [\n            <input type=\"number\" min={1} max={product.get(\"availability\")}\n                value={1} aria-label=\"Ilość\"\n                onInput={()=>this.ClampLength()}\n                onChange={()=>{this.ClampValue(); this.CountChangeHandler();}}\n            />,\n            <div class=\"spinner\">\n                <button onClick={()=>this.Increment()}>+</button>\n                <button onClick={()=>this.Decrement()}>-</button>\n            </div>\n\t\t]\n\t}\n}\n"],"mappings":"4PAAA,IAAMA,EAAkB,unD,ICOXC,EAAYC,EAAA,8B,iEAIrBC,EAAAC,UAAAC,iBAAA,WACIC,KAAKC,MAAQD,KAAKE,KAAKC,cAAc,Q,EAIzCN,EAAAC,UAAAM,mBAAA,WACIJ,KAAKK,YAAYC,KAAKC,SAASP,KAAKC,MAAMO,O,EAG9CX,EAAAC,UAAAW,YAAA,WACI,GAAGT,KAAKC,MAAMO,MAAME,OAAS,EACzBV,KAAKC,MAAMO,MAAQR,KAAKC,MAAMO,MAAMG,OAAO,EAAG,E,EAGtDd,EAAAC,UAAAc,WAAA,WACI,GAAGL,SAASP,KAAKC,MAAMO,OAASK,EAAQC,IAAI,gBAAiB,CACzDd,KAAKC,MAAMO,MAAQK,EAAQC,IAAI,gBAAgBC,U,CAGnD,GAAGR,SAASP,KAAKC,MAAMO,OAAS,EAAG,CAC/BR,KAAKC,MAAMO,MAAQ,G,GAI3BX,EAAAC,UAAAkB,UAAA,WACI,IAAMR,EAAQD,SAASP,KAAKC,MAAMO,OAAS,EAC3C,GAAGA,GAASK,EAAQC,IAAI,gBAAiB,CACrCd,KAAKC,MAAMO,MAAQA,EAAMO,WACzBf,KAAKI,oB,GAIbP,EAAAC,UAAAmB,UAAA,WACI,IAAMT,EAAQD,SAASP,KAAKC,MAAMO,OAAS,EAC3C,GAAGA,GAAS,EAAG,CACXR,KAAKC,MAAMO,MAAQA,EAAMO,WACzBf,KAAKI,oB,GAIbP,EAAAC,UAAAoB,OAAA,SAAOC,EAAUC,GACbA,EAAKD,EAAEE,O,EAGdxB,EAAAC,UAAAwB,OAAA,eAAAC,EAAAvB,KACC,MAAO,CACGwB,EAAA,SAAOC,KAAK,SAASC,IAAK,EAAGC,IAAKd,EAAQC,IAAI,gBAC1CN,MAAO,EAAC,aAAa,QACrBoB,QAAS,WAAI,OAAAL,EAAKd,aAAL,EACboB,SAAU,WAAKN,EAAKX,aAAcW,EAAKnB,oBAAqB,IAEhEoB,EAAA,OAAKM,MAAM,WACPN,EAAA,UAAQO,QAAS,WAAI,OAAAR,EAAKP,WAAL,GAAgB,KACrCQ,EAAA,UAAQO,QAAS,WAAI,OAAAR,EAAKN,WAAL,GAAgB,M,yHAzD5B,I"}