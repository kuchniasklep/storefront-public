{"version":3,"names":["cartMessageCss","CartMessage","componentWillLoad","this","watchHandler","message","newValue","visibility","setTimeout","messageDelay","render","h","Host","class"],"sources":["src/components/cart/message/cartMessage.css?tag=ks-cart-message","src/components/cart/message/cartMessage.tsx"],"sourcesContent":["ks-cart-message {\n    display: block;\n\n    text-align: center;\n    color: white;\n    background-color: var(--color-secondary);\n    overflow: hidden;\n\n    opacity: 0.0;\n    max-height: 0px;\n    height: auto;\n\n    transition: opacity 0.5s ease, max-height 0.5s ease;\n}\n\nks-cart-message.show { opacity: 1.0; max-height: 100px; }\nks-cart-message.hide { opacity: 0.0; max-height: 0px;  }\n\nks-cart-message > p {\n    margin: 10px;\n}","import { Component, h, Prop, Host, State, Watch } from '@stencil/core';\n\n@Component({\n  tag: 'ks-cart-message',\n  styleUrl: 'cartMessage.css'\n})\nexport class CartMessage {\n    @Prop() message: string = \"\";\n\n    @State() visibility: string = \"hide\";\n    @State() messageDelay: string = \"\";\n\n    componentWillLoad() {\n        this.watchHandler(this.message);\n    }\n\n    @Watch('message')\n    watchHandler(newValue: string) {\n        if(newValue == \"\") {\n            this.visibility = \"hide\";\n            setTimeout(() => {\n                this.messageDelay = \"\";\n            }, 500);\n        }\n        else {\n            this.visibility = \"show\";\n            this.messageDelay = this.message;\n        }\n    }\n\n    render() {\n        return(\n            <Host class={this.visibility}>\n                <p>{this.messageDelay}</p>\n            </Host>\n        );\n    }\n}"],"mappings":"sDAAA,MAAMA,EAAiB,4Y,MCMVC,EAAW,M,sCACM,G,gBAEI,O,kBACE,E,CAEhCC,oBACIC,KAAKC,aAAaD,KAAKE,Q,CAI3BD,aAAaE,GACT,GAAGA,GAAY,GAAI,CACfH,KAAKI,WAAa,OAClBC,YAAW,KACPL,KAAKM,aAAe,EAAE,GACvB,I,KAEF,CACDN,KAAKI,WAAa,OAClBJ,KAAKM,aAAeN,KAAKE,O,EAIjCK,SACI,OACIC,EAACC,EAAI,CAACC,MAAOV,KAAKI,YACdI,EAAA,SAAIR,KAAKM,c"}