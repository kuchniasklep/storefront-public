{"version":3,"names":["deferredpromise","deferred","promise","resolve","reject","Promise","window_load","document","readyState","addEventListener"],"sources":["src/components/deferredpromise.ts"],"sourcesContent":["export type deferredpromisetype = {\n    promise: Promise<void>,\n    resolve: ()=>void,\n    reject: ()=>void,\n}\n\nexport default function deferredpromise() {\n\tlet deferred: deferredpromisetype = {\n\t\tpromise: null,\n\t\tresolve: null,\n\t\treject: null\n\t};\n\n\tdeferred.promise = new Promise((resolve, reject) => {\n\t\tdeferred.resolve = resolve;\n\t\tdeferred.reject = reject;\n\t});\n\n\treturn deferred;\n}\n\nexport var window_load = deferredpromise();\nif(document.readyState === 'complete') {\n    window_load.resolve();\n}\nelse addEventListener('load', () => {\n    window_load.resolve();\n});"],"mappings":"SAMwBA,IACvB,IAAIC,EAAgC,CACnCC,QAAS,KACTC,QAAS,KACTC,OAAQ,MAGTH,EAASC,QAAU,IAAIG,SAAQ,CAACF,EAASC,KACxCH,EAASE,QAAUA,EACnBF,EAASG,OAASA,CAAM,IAGzB,OAAOH,CACR,C,IAEWK,EAAcN,IACzB,GAAGO,SAASC,aAAe,WAAY,CACnCF,EAAYH,S,MAEXM,iBAAiB,QAAQ,KAC1BH,EAAYH,SAAS,W"}