{"version":3,"names":["removeProduct","id","ProductLoadingWrapper","__awaiter","_this","fetch","cart","get","productRemove","data","_a","sent","products","length","document","location","reload","ShowMessageFromData","cleanedData","update","this","RemoveDiscount","product","querySelector","concat","ResetLoading","lastProductCountCall","productCount","count","last","ProductCountCall","then","undefined","current","ilosc","toString","messagePopup","show","error","message","set","GetCorrectedProductAmounts","amount","maxAmount","SetAmount","quantity","maxQuantity","addDeal","key","spinner","countryChange","code","StartLoading","apply","_b","shippingChange","paymentChange","discountRemove","discountCodeAdd","discountCode","pData","discountPointsAdd","points","discountPoints","ScrollToElement","heading","querySelectorAll","scrollAmount","getBoundingClientRect","top","window","scrollBy","easyprotectChange","insured","api","loading","jsonfetch","response","json","loaded","easyprotectRemove","formfetch","component","name","callback","setTimeout","func","output","url","formProperties","catch","messageError","Object","keys","map"],"sources":["src/global/functions/cart.ts"],"sourcesContent":["\nimport { cart, CartData, CartDiscount, easyprotectInsured } from \"../data/cart\";\nimport { jsonfetch, formfetch } from \"./fetch\";\n\n\nexport async function removeProduct(id: string) {\n    const data = await ProductLoadingWrapper(async ()=>{\n        return fetch(cart.get('api').productRemove, { \"id\": id });\n    });\n\n    if(data) {\n        if(data.products.length == 0)\n            document.location.reload();\n    \n        else ShowMessageFromData(\"Błąd usuwania produktu\", data, async (cleanedData)=>{ \n            update(cleanedData);\n\n            if('discount' in cleanedData == false)\n                this.RemoveDiscount();\n        });\n    }\n    \n    const product = document.querySelector(`ks-cart-product[ikey=\"${id}\"]`) as HTMLKsCartProductElement;\n    if(product) product.ResetLoading();\n}\n\n\n\n\n\nvar lastProductCountCall = {};\nexport async function productCount(id: string, count: number, last: number) {\n\n    if (lastProductCountCall[id]) {\n        lastProductCountCall[id] = () => ProductCountCall(id, count, last);\n    }\n        \n    else {\n        lastProductCountCall[id] = ()=>{};\n        ProductCountCall(id, count, last).then(()=>{\n            if(lastProductCountCall[id]) {\n                lastProductCountCall[id]();\n                lastProductCountCall[id] = undefined;\n            }\n        });\n    }\n}\n\nasync function ProductCountCall(id: string, current: number, last: number) {\n    const data = await ProductLoadingWrapper(async ()=>{\n        return fetch(cart.get('api').productCount, {\n            \"id\": id,\n            \"ilosc\": current.toString()\n        });\n    });\n\n    if(data) {\n        ShowMessageFromData(\"Błąd ilości produktu\", data, async (cleanedData)=>{\n            if('error' in cleanedData) {\n                \n                messagePopup().show(\"Błąd ilości produktu\", cleanedData.error.message);\n                cart.set(\"products\", GetCorrectedProductAmounts(id, cleanedData.error.amount, cleanedData.error.maxAmount));\n            }\n            else await update(cleanedData);\n    \n            if('discount' in cleanedData == false)\n                RemoveDiscount();\n        });\n    }\n    else {\n        cart.set(\"products\", GetCorrectedProductAmounts(id, last));\n        this.SetAmount(last, `ks-cart-product[ikey=\"${id}\"] ks-cart-spinner`);\n    }\n}\n\nfunction GetCorrectedProductAmounts(id: string, amount: number, maxAmount?: number) {\n    const products = cart.get(\"products\");\n    products[id].quantity = amount;\n    if(maxAmount) products[id].maxQuantity = maxAmount;\n\n    return products;\n}\n\n/*function GetDataWithoutProducts(data: any) {\n    const dataWithoutProducts = data;\n    delete dataWithoutProducts.products;\n    return dataWithoutProducts;\n}\n\nfunction SetAmount(amount: number, querySelector: string) {\n    console.log(\"test\");\n    const component = document.querySelector(querySelector) as any;\n    if(component && 'SetAmount' in component)\n        component.SetAmount(amount);\n}*/\n\n\n\nexport async function addDeal(id: string) {\n    cart.set(\"loadingDeals\", true);\n    const data = await fetch(cart.get('api').addDeal, {\"id\": id });\n    cart.set(\"loadingDeals\", false);\n\n    if(!data || 'error' in data) {\n        messagePopup().show(\"Błąd dodawania gratisu\", data.error.message);\n        return;\n    }\n    else await update(data);\n    \n    for (const key in cart.get('products')) {\n        const product = cart.get('products')[key];\n        const spinner = document.querySelector(`ks-cart-product[product-id=\"${product.id}\"] ks-cart-spinner`);\n        (spinner as HTMLKsCartSpinnerElement)?.SetAmount(product.quantity);\n    }\n}\n\n\n\nexport async function countryChange(code :string) {\n    StartLoading(`ks-cart-select-shipping`);\n    StartLoading(`ks-cart-select-payment`);\n    update(await fetch(cart.get('api').countryChange, { \"data\": code }));\n    ResetLoading(`ks-cart-select-shipping`);\n    ResetLoading(`ks-cart-select-payment`);\n}\n\n\nexport async function shippingChange(id: number) {\n    StartLoading(`ks-cart-select-payment`);\n    update(await fetch(cart.get('api').shippingChange, { \"data\": id.toString() }));\n    ResetLoading(`ks-cart-select-payment`);\n}\n\nexport async function paymentChange(id: number) {\n    update(await fetch(cart.get('api').paymentChange, {\"data\": id.toString() }));\n}\n\nexport async function discountRemove() {\n    update(await fetch(cart.get('api').discountRemove));\n    RemoveDiscount();\n}\n\nfunction RemoveDiscount() {\n    cart.set(\"discount\", {} as CartDiscount);\n}\n\nexport async function discountCodeAdd(code: string) {\n    const data = await fetch(cart.get('api').discountCode, { \"data\": code });\n\n    ShowMessageFromData(\"Błąd dodawania kodu\", data, (pData)=>{\n        update(pData);\n    });\n\n    ResetLoading(`ks-cart-discount-code`);\n}\n\nexport async function discountPointsAdd(points: number) {\n    const data = await fetch(cart.get('api').discountPoints, {\"data\": points.toString() });\n\n    ScrollToElement('ks-cart-discount-container ks-cart-heading');\n    update(data);\n    ResetLoading(`ks-cart-discount-points`);\n};\n\n\nfunction ScrollToElement(querySelector: string) {\n    const heading = document.querySelectorAll(querySelector);\n    let scrollAmount = 0;\n    \n    if(heading.length == 2)\n        scrollAmount = heading[1].getBoundingClientRect().top - heading[0].getBoundingClientRect().top;\n\n    if(scrollAmount)\n        window.scrollBy(0, -scrollAmount);\n}\n\n\nexport async function easyprotectChange(insured: easyprotectInsured) {\n    const api = cart.get(\"api\").easyprotectChange;\n\n    loading();\n    \n    await jsonfetch(api, insured)\n    .then(response => response.json())\n    .then(json => update(json));\n\n    loaded();\n}\n\nexport async function easyprotectRemove(id: string) {\n    const api = cart.get(\"api\").easyprotectRemove;\n\n    loading();\n\n    await formfetch(api, {\"id\": id})\n    .then(response => response.json())\n    .then(json => update(json));\n\n    loaded();\n}\n\n\n\nfunction StartLoading(querySelector: string) {\n    const component = document.querySelector(querySelector) as any;\n    if(component && 'StartLoading' in component)\n        component.StartLoading();\n}\n\nfunction ResetLoading(querySelector: string) {\n    const component = document.querySelector(querySelector) as any;\n    if(component && 'ResetLoading' in component)\n        component.ResetLoading();\n}\n\n\nasync function ShowMessageFromData(name: string, data: any, callback: (d: any)=>void ) {\n    if('message' in data){\n        messagePopup().show(name, data.message);\n        delete data.message;\n\n        // Update state after modal animation finishes.\n        setTimeout(() => {\n            callback(data);\n        }, 200);\n    }\n    else callback(data);\n}\n\nasync function ProductLoadingWrapper(func: ()=>Promise<any>) {\n    cart.set(\"loadingProducts\", cart.get(\"loadingProducts\") + 1);\n    const output = await func();\n    cart.set(\"loadingProducts\", cart.get(\"loadingProducts\") - 1);\n    return output;\n}\n\n\nasync function fetch(url: string, formProperties?: {[index: string]: string}) {\n    loading();\n\n    return formfetch(url, formProperties)\n    .then(response => response.json())\n    .then(json => {\n        loaded();\n        return json;\n    })\n    .catch(error => {\n        loaded();\n        messageError().show(error);\n        return {};\n    });\n}\n\nexport function update(data: any) {\n    Object.keys(data).map(key => {\n        cart.set(key as keyof CartData, data[key]);\n    });\n}\n\nfunction loading() {\n    cart.set(\"loading\", cart.get(\"loading\") + 1);\n}\n\nfunction loaded() {\n    cart.set(\"loading\", cart.get(\"loading\") - 1);\n}\n\nfunction messagePopup() {\n    return document.querySelector('ks-message-popup') as HTMLKsMessagePopupElement;\n}\n\nfunction messageError() {\n    return document.querySelector('ks-error-popup') as HTMLKsErrorPopupElement;\n}"],"mappings":"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"}